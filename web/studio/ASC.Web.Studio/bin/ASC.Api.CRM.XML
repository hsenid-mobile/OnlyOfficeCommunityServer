<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.CRM</name>
    </assembly>
    <members>
        <member name="T:ASC.Api.CRM.CRMApi">
            <name>crm</name>
            <name>crm</name>
            <name>crm</name>
            <name>crm</name>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCurrencyRates">
            <summary>
            Returns a list of all the currency rates.
            </summary>
            <short>Get currency rates</short> 
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyRateWrapper, ASC.Api.CRM">
            List of currency rates
            </returns>
            <path>api/2.0/crm/currency/rates</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCurrencyRate(System.Int32)">
            <summary>
            Returns a currency rate by ID.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Currency rate ID</param>
            <short>Get a currency rate by ID</short> 
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyRateWrapper, ASC.Api.CRM">
            Currency rate
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/currency/rates/{id}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCurrencyRate(System.String,System.String)">
            <summary>
            Returns a currency rate by currencies.
            </summary>
            <param type="System.String, System" method="url" name="fromCurrency">Currency to convert</param>
            <param type="System.String, System" method="url" name="toCurrency">Currency into which the original currency will be converted</param>
            <short>Get a currency rate by currencies</short> 
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyRateWrapper, ASC.Api.CRM">
            Currency rate
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/currency/rates/{fromCurrency}/{toCurrency}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCurrencyRate(System.String,System.String,System.Decimal)">
            <summary>
            Creates a new currency rate with the parameters specified in the request.
            </summary>
            <param type="System.String, System" name="fromCurrency">Currency to convert</param>
            <param type="System.String, System" name="toCurrency">Currency into which the original currency will be converted</param>
            <param type="System.Decimal, System" name="rate">Exchange rate</param>
            <short>Create a currency rate</short>
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyRateWrapper, ASC.Api.CRM">Currency rate</returns>
            <path>api/2.0/crm/currency/rates</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCurrencyRate(System.Int32,System.String,System.String,System.Decimal)">
            <summary>
            Updates a currency rate with the parameters specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Currency ID</param>
            <param type="System.String, System" method="url" name="fromCurrency">New currency to convert</param>
            <param type="System.String, System" method="url" name="toCurrency">New currency into which the original currency will be converted</param>
            <param type="System.Decimal, System" name="rate">New currency rate</param>
            <short>Update a currency rate</short>
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyRateWrapper, ASC.Api.CRM">Updated currency rate</returns>
            <path>api/2.0/crm/currency/rates/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetCurrencyRates(System.String,System.Collections.Generic.List{ASC.CRM.Core.CurrencyRate})">
            <summary>
            Sets currency rates to the currency specified in the request.
            </summary>
            <param type="System.String, System" name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by API">Currency (abbreviation)</param>
            <param type="System.Collections.Generic.List{ASC.CRM.Core.CurrencyRate}, System.Collections.Generic" name="rates">List of currency rates</param>
            <short>Set currency rates</short>
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyRateWrapper, ASC.Api.CRM">Currency information</returns>
            <path>api/2.0/crm/currency/setrates</path>
            <httpMethod>POST</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddCurrencyRates(System.Collections.Generic.List{ASC.CRM.Core.CurrencyRate})">
            <summary>
            Adds currency rates specified in the request.
            </summary>
            <param type="System.Collections.Generic.List{ASC.CRM.Core.CurrencyRate}, System.Collections.Generic" name="rates">List of currency rates</param>
            <short>Add currency rates</short>
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyRateWrapper, ASC.Api.CRM">Currency information</returns>
            <path>api/2.0/crm/currency/addrates</path>
            <httpMethod>POST</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteCurrencyRate(System.Int32)">
            <summary>
            Deletes a currency rate with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Currency rate ID</param>
            <short>Delete a currency rate</short>
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyRateWrapper, ASC.Api.CRM">Currency rate</returns>
            <path>api/2.0/crm/currency/rates/{id}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceByID(System.Int32)">
            <summary>
             Returns the detailed information about an invoice with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="invoiceid">Invoice ID</param>
            <short>Get an invoice by ID</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceWrapper, ASC.Api.CRM">Invoice</returns>
            <path>api/2.0/crm/invoice/{invoiceid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceSample">
            <summary>
             Returns the detailed information about an invoice sample.
            </summary>
            <short>Get an invoice sample</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceWrapper, ASC.Api.CRM">Invoice</returns>
            <path>api/2.0/crm/invoice/sample</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceJsonData(System.Int32)">
            <summary>
             Returns the JSON data of an invoice with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="invoiceid">Invoice ID</param>
            <short>Get the invoice JSON data</short> 
            <category>Invoices</category>
            <returns>Invoice JSON data</returns>
            <path>api/2.0/crm/invoice/jsondata/{invoiceid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoices(System.Nullable{ASC.CRM.Core.InvoiceStatus},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String,System.Int32,System.String)">
            <summary>
            Returns a list of invoices matching the parameters specified in the request.
            </summary>
            <param type="System.Nullable{ASC.CRM.Core.InvoiceStatus}, System" method="url" name="status">Invoice status</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" name="issueDateFrom">Invoice start issue date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" name="issueDateTo">Invoice end issue date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" name="dueDateFrom">Invoice start due date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" name="dueDateTo">Invoice end due date</param>
            <param type="System.String, System" method="url" name="entityType">Invoice entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Invoice entity ID</param>
            <param type="System.String, System" method="url" name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by API">Invoice currency (abbreviation)</param>
            <short>Get invoices</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceBaseWrapper, ASC.Api.CRM">List of invoices</returns>
            <path>api/2.0/crm/invoice/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetEntityInvoices(System.String,System.Int32)">
            <summary>
             Returns a list of all the invoices related to the entity with the ID and type specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="entityType">Invoice entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Invoice entity ID</param>
            <short>Get entity invoices</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM">List of invoices</returns>
            <path>api/2.0/crm/{entityType}/invoicelist/{entityid}</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoiceBatchStatus(System.Int32[],ASC.CRM.Core.InvoiceStatus)">
            <summary>
            Updates a status of invoices with the IDs specified in the request.
            </summary>
            <param type="System.Int32[], System" name="invoiceids">List of invoice IDs</param>
            <param type="ASC.CRM.Core.InvoiceStatus, ASC.CRM.Core" method="url" name="status">New invoice status</param>
            <short>Update an invoice group status</short> 
            <category>Invoices</category>
            <returns>Invoice information</returns>
            <path>api/2.0/crm/invoice/status/{status}</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteInvoice(System.Int32)">
            <summary>
            Deletes an invoice with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="invoiceid">Invoice ID</param>
            <short>Delete an invoice</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceBaseWrapper, ASC.Api.CRM">Invoice</returns>
            <path>api/2.0/crm/invoice/{invoiceid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchInvoices(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of invoices with the IDs specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="invoiceids">List of invoice IDs</param>
            <short>Delete invoices</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceBaseWrapper, ASC.Api.CRM">List of invoices</returns>
            <path>api/2.0/crm/invoice</path>
            <httpMethod>DELETE</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateInvoice(System.String,ASC.Specific.ApiDateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,ASC.Specific.ApiDateTime,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ASC.CRM.Core.Entities.InvoiceLine})">
            <summary>
             Creates an invoice with the parameters (contact ID, consignee ID, etc.) specified in the request.
            </summary>
            <param type="System.String, System" optional="false" name="number">Invoice number</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="false" name="issueDate">Invoice issue date</param>
            <param type="System.Int32, System" optional="true" name="templateType">Invoice template type</param>
            <param type="System.Int32, System" optional="false" name="contactId">Invoice contact ID</param>
            <param type="System.Int32, System" optional="true" name="consigneeId">Invoice consignee ID</param>
            <param type="System.Int32, System" optional="true" name="entityId">Invoice entity ID</param>
            <param type="System.Int32, System" optional="true" name="billingAddressID">Invoice billing address ID</param>
            <param type="System.Int32, System" optional="true" name="deliveryAddressID">Invoice delivery address ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="false" name="dueDate">Invoice due date</param>
            <param type="System.String, System" optional="false" name="language">Invoice language</param>
            <param type="System.String, System" optional="false" name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by API">Invoice currency (abbreviation)</param>
            <param type="System.Decimal, System" optional="false" name="exchangeRate">Invoice exchange rate</param>
            <param type="System.String, System" optional="true" name="purchaseOrderNumber">Invoice purchase order number</param>
            <param type="System.String, System" optional="false" name="terms">Invoice terms</param>
            <param type="System.String, System" optional="true" name="description">Invoice description</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.CRM.Core.Entities.InvoiceLine}, System.Collections.Generic" optional="false" name="invoiceLines">List of invoice lines</param>
            <short>Create an invoice</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceWrapper, ASC.Api.CRM">Invoice</returns>
            <example>
            <![CDATA[
            
            Data transfer in application/json format:
            
            data: {
               number: "invoice000001",
               issueDate: "2015-06-01T00:00:00",
               contactId: 10,
               dueDate: "2025-06-01T00:00:00",
               language: "es-ES",
               currency: "rub",
               exchangeRate: 54.32,
               terms: "Terms for this invoice",
               invoiceLines:
               [{
                     invoiceItemID: 1,
                     invoiceTax1ID: 1,
                     invoiceTax2ID: 2,
                     description: "description for invoice line 1",
                     quantity: 100,
                     price: 7.7,
                     discount: 25
               }]  
            }
            
            where invoiceItemID, invoiceTax1ID, invoiceTax2ID - IDs of the real existing invoice item and invoice taxes, contactId - ID of the existing contact.
            
            ]]>
            </example>
            <path>api/2.0/crm/invoice</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoice(System.Int32,ASC.Specific.ApiDateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,ASC.Specific.ApiDateTime,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ASC.CRM.Core.Entities.InvoiceLine})">
            <summary>
             Updates the selected invoice with the parameters (contact ID, consignee ID, etc.) specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" optional="false" name="id">Invoice ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="false" name="issueDate">New invoice issue date</param>
            <param type="System.Int32, System" optional="true" name="templateType">New invoice template type</param>
            <param type="System.Int32, System" optional="false" name="contactId">New invoice contact ID</param>
            <param type="System.Int32, System" optional="true" name="consigneeId">New invoice consignee ID</param>
            <param type="System.Int32, System" optional="true" name="entityId">New invoice entity ID</param>
            <param type="System.Int32, System" optional="true" name="billingAddressID">New invoice billing address ID</param>
            <param type="System.Int32, System" optional="true" name="deliveryAddressID">New invoice delivery address ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="dueDate">New invoice due date</param>
            <param type="System.String, System" optional="false" name="language">New invoice language</param>
            <param type="System.String, System" optional="false" name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by API">New invoice currency (abbreviation)</param>
            <param type="System.Decimal, System" optional="false" name="exchangeRate">New invoice exchange rate</param>
            <param type="System.String, System" optional="true" name="purchaseOrderNumber">New invoice purchase order number</param>
            <param type="System.String, System" optional="false" name="terms">New invoice terms</param>
            <param type="System.String, System" optional="true" name="description">New invoice description</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.CRM.Core.Entities.InvoiceLine}, System.Collections.Generic" optional="false" name="invoiceLines">New list of invoice lines</param>
            <short>Update an invoice</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceWrapper, ASC.Api.CRM">Updated invoice</returns>
            <example>
            <![CDATA[
            
            Data transfer in application/json format:
            
            data: {
               id: 5,
               issueDate: "2015-06-01T00:00:00",
               contactId: 10,
               dueDate: "2025-06-01T00:00:00",
               language: "es-ES",
               currency: "rub",
               exchangeRate: 54.32,
               terms: "Terms for this invoice",
               invoiceLines:
               [{
                     invoiceItemID: 1,
                     invoiceTax1ID: 1,
                     invoiceTax2ID: 2,
                     description: "description for invoice line 1",
                     quantity: 100,
                     price: 7.7,
                     discount: 25
               }]
            }
            
            where invoiceItemID, invoiceTax1ID, invoiceTax2ID - IDs of the real existing invoice item and invoice taxes, contactId - ID of the existing contact.
            
            ]]>
            </example>
            <path>api/2.0/crm/invoice/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoicePdfExistOrCreate(System.Int32)">
            <summary>
             Returns the pdf file related to an invoice with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="invoiceid">Invoice ID</param>
            <short>Get the invoice pdf file</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.Documents.FileWrapper, ASC.Api.Documents">Pdf file</returns>
            <path>api/2.0/crm/invoice/{invoiceid}/pdf</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceConverterData(System.Int32,System.String,System.String)">
            <summary>
             Returns information about the generation of the invoice pdf file.
            </summary>
            <param type="System.Int32, System" name="invoiceId">Invoice ID</param>
            <param type="System.String, System" name="storageUrl">Storage URL</param>
            <param type="System.String, System" name="revisionId">Revision ID</param>
            <short>Get invoice converter data</short> 
            <category>Invoices</category>
            <returns type="ASC.Web.CRM.Classes.ConverterData, ASC.Web.CRM">Converter data</returns>
            <path>api/2.0/crm/invoice/converter/data</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceByNumberExistence(System.String)">
            <summary>
             Returns the existence of an invoice with the number specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="number">Invoice number</param>
            <short>Check invoice existence by number</short> 
            <category>Invoices</category>
            <returns>Invoice existence</returns>
            <path>api/2.0/crm/invoice/bynumber/exist</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceByNumber(System.String)">
            <summary>
             Returns the detailed information about an invoice with the number specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="number">Invoice number</param>
            <short>Get an invoice by number</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceWrapper, ASC.Api.CRM">Invoice</returns>
            <path>api/2.0/crm/invoice/bynumber</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceItems(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Returns a list of invoice items matching the parameters specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="status">Invoice status</param>
            <param type="System.Nullable{System.Boolean}, System" method="url" optional="true" name="inventoryStock">Specifies if the inventory is tracked or not</param>
            <short>Get filtered invoice items</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceItemWrapper, ASC.Api.CRM">List of invoice items</returns>
            <path>api/2.0/crm/invoiceitem/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceItemByID(System.Int32)">
            <summary>
             Returns the detailed information about an invoice item with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="invoiceitemid">Invoice item ID</param>
            <short>Get an invoice item by ID</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceItemWrapper, ASC.Api.CRM">Invoice item</returns>
            <path>api/2.0/crm/invoiceitem/{invoiceitemid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateInvoiceLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
             Creates an invoice line with the parameters (invoice ID, invoice item ID, etc.) specified in the request.
            </summary>
            <param type="System.Int32, System" optional="false" name="invoiceId">Invoice ID</param>
            <param type="System.Int32, System" optional="false" name="invoiceItemId">Invoice item ID</param>
            <param type="System.Int32, System" optional="true" name="invoiceTax1Id">First invoice tax ID</param>
            <param type="System.Int32, System" optional="true" name="invoiceTax2Id">Second invoice tax ID</param>
            <param type="System.Int32, System" optional="true" name="sortOrder">Sort order</param>
            <param type="System.String, System" optional="true" name="description">Description</param>
            <param type="System.Decimal, System" optional="true" name="quantity">Quantity</param>
            <param type="System.Decimal, System" optional="true" name="price">Price</param>
            <param type="System.Decimal, System" optional="true" name="discount">Discount</param>
            <short>Create an invoice line</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceLineWrapper, ASC.Api.CRM">Invoice line</returns>
            <path>api/2.0/crm/invoiceline</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoiceLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
             Updates the selected invoice line with the parameters (invoice ID, invoice item ID, etc.) specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" optional="false" name="id">Invoice line ID</param>
            <param type="System.Int32, System" optional="false" name="invoiceId">Invoice ID</param>
            <param type="System.Int32, System" optional="false" name="invoiceItemId">Invoice item ID</param>
            <param type="System.Int32, System" optional="true" name="invoiceTax1Id">New first invoice tax ID</param>
            <param type="System.Int32, System" optional="true" name="invoiceTax2Id">New second invoice tax ID</param>
            <param type="System.Int32, System" optional="true" name="sortOrder">New sort order</param>
            <param type="System.String, System" optional="true" name="description">New description</param>
            <param type="System.Decimal, System" optional="true" name="quantity">New quantity</param>
            <param type="System.Decimal, System" optional="true" name="price">New price</param>
            <param type="System.Decimal, System" optional="true" name="discount">New discount</param>
            <short>Update an invoice line</short>
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceLineWrapper, ASC.Api.CRM">Updated invoice line</returns>
            <path>api/2.0/crm/invoiceline/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteInvoiceLine(System.Int32)">
            <summary>
            Deletes an invoice line with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" optional="false" name="id">Invoice line ID</param>
            <short>Delete an invoice line</short> 
            <category>Invoices</category>
            <returns>Invoice line ID</returns>
            <path>api/2.0/crm/invoiceline/{id}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateInvoiceItem(System.String,System.String,System.Decimal,System.String,System.Decimal,System.Boolean,System.Int32,System.Int32)">
            <summary>
             Creates an invoice item with the parameters (title, description, price, etc.) specified in the request.
            </summary>
            <param type="System.String, System" optional="false" name="title">Invoice item title</param>
            <param type="System.String, System" optional="true" name="description">Invoice item description</param>
            <param type="System.Decimal, System" optional="false" name="price">Invoice item price</param>
            <param type="System.String, System" optional="true" name="sku">Invoice item stock keeping unit</param>
            <param type="System.Decimal, System" optional="true" name="stockQuantity">Invoice item stock quantity</param>
            <param type="System.Boolean, System" optional="true" name="trackInventory">Specifies if the inventory is tracked or not</param>
            <param type="System.Int32, System" optional="true" name="invoiceTax1id">First invoice item tax ID</param>
            <param type="System.Int32, System" optional="true" name="invoiceTax2id">Second invoice item tax ID</param>
            <short>Create an invoice item</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceItemWrapper, ASC.Api.CRM">Invoice item</returns>
            <path>api/2.0/crm/invoiceitem</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoiceItem(System.Int32,System.String,System.String,System.Decimal,System.String,System.Decimal,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Updates the selected invoice item with the parameters (title, description, price, etc.) specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" optional="false" name="id">Invoice item ID</param>
            <param type="System.String, System" optional="false" name="title">New invoice item title</param>
            <param type="System.String, System" optional="true" name="description">New invoice item description</param>
            <param type="System.Decimal, System" optional="false" name="price">New invoice item price</param>
            <param type="System.String, System" optional="true" name="sku">New invoice item stock keeping unit</param>
            <param type="System.Decimal, System" optional="true" name="stockQuantity">New invoice item stock quantity</param>
            <param type="System.Boolean, System" optional="true" name="trackInventory">Specifies if the inventory is tracked or not</param>
            <param type="System.Int32, System" optional="true" name="invoiceTax1id">New first invoice item tax ID</param>
            <param type="System.Int32, System" optional="true" name="invoiceTax2id">New second invoice item tax ID</param>
            <short>Update an invoice item</short>
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceItemWrapper, ASC.Api.CRM">Updated invoice item</returns>
            <path>api/2.0/crm/invoiceitem/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteInvoiceItem(System.Int32)">
            <summary>
            Deletes an invoice item with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Invoice item ID</param>
            <short>Delete an invoice item</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceItemWrapper, ASC.Api.CRM">Invoice item</returns>
            <path>api/2.0/crm/invoiceitem/{id}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchItems(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of invoice items with the IDs specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="ids">List of invoice item IDs</param>
            <short>Delete invoice items</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceItemWrapper, ASC.Api.CRM">List of invoice items</returns>
            <path>api/2.0/crm/invoiceitem</path>
            <httpMethod>DELETE</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceTaxes">
            <summary>
            Returns a list of invoice taxes.
            </summary>
            <short>Get invoice taxes</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceTaxWrapper, ASC.Api.CRM">List of invoice taxes</returns>
            <path>api/2.0/crm/invoice/tax</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateInvoiceTax(System.String,System.String,System.Decimal)">
            <summary>
             Creates an invoice tax with the parameters (name, description, rate) specified in the request.
            </summary>
            <param type="System.String, System" name="name">Tax name</param>
            <param type="System.String, System" name="description">Tax description</param>
            <param type="System.Decimal, System" name="rate">Tax rate</param>
            <short>Create an invoice tax</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceTaxWrapper, ASC.Api.CRM">Invoice tax</returns>
            <path>api/2.0/crm/invoice/tax</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoiceTax(System.Int32,System.String,System.String,System.Decimal)">
            <summary>
             Updates the selected invoice tax with the parameters (name, description, rate) specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Tax ID</param>
            <param type="System.String, System" name="name">New tax name</param>
            <param type="System.String, System" name="description">New tax description</param>
            <param type="System.Decimal, System" name="rate">New tax rate</param>
            <short>Update an invoice tax</short>
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceTaxWrapper, ASC.Api.CRM">Updated invoice tax</returns>
            <path>api/2.0/crm/invoice/tax/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteInvoiceTax(System.Int32)">
            <summary>
             Deletes an invoice tax with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Tax ID</param>
            <short>Delete an invoice tax</short> 
            <category>Invoices</category>
            <returns type="ASC.Api.CRM.Wrappers.InvoiceTaxWrapper, ASC.Api.CRM">Invoice tax</returns>
            <path>api/2.0/crm/invoice/tax/{id}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetSettings">
            <summary>
             Returns the default invoice settings.
            </summary>
            <short>Get the default invoice settings</short>
            <category>Invoices</category>
            <returns type="ASC.Web.CRM.Classes.InvoiceSetting, ASC.Web.CRM">Default invoice settings</returns>
            <path>api/2.0/crm/invoice/settings</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SaveNumberSettings(System.Boolean,System.String,System.String)">
            <summary>
            Saves the default settings for the invoice number specified in the request.
            </summary>
            <param type="System.Boolean, System" name="autogenerated">Defines if the default invoice number is autogenerated or not</param>
            <param type="System.String, System" name="prefix">Invoice prefix</param>
            <param type="System.String, System" name="number">Invoice number</param>
            <short>Save the invoice number default settings</short>
            <category>Invoices</category>
            <returns type="ASC.Web.CRM.Classes.InvoiceSetting, ASC.Web.CRM">Invoice settings</returns>
            <path>api/2.0/crm/invoice/settings/name</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SaveTermsSettings(System.String)">
            <summary>
             Saves the default settings for the invoice terms specified in the request.
            </summary>
            <param type="System.String, System" name="terms">Invoice terms</param>
            <short>Save the invoice terms default settings</short>
            <category>Invoices</category>
            <returns type="ASC.Web.CRM.Classes.InvoiceSetting, ASC.Web.CRM">Invoice settings</returns>
            <path>api/2.0/crm/invoice/settings/terms</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetInvoiceCreationDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
             Sets the creation date to an invoice with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="invoiceid">Invoice ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="creationDate">Invoice creation date</param>
            <short>Set the invoice creation date</short>
            <category>Invoices</category>
            <path>api/2.0/crm/invoice/{invoiceid}/creationdate</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetInvoiceLastModifedDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
             Sets the last modified date to an invoice with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="invoiceid">Invoice ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="lastModifedDate">Invoice last modified date</param>
            <short>Set the invoice last modified date</short>
            <category>Invoices</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CloseCases(System.Int32)">
            <summary>
            Closes a case with the ID specified in the request.
            </summary>
            <short>Close a case</short> 
            <category>Cases</category>
            <param type="System.Int32, System" method="url" name="caseid" optional="false">Case ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">
            Case
            </returns>
            <path>api/2.0/crm/case/{caseid}/close</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ReOpenCases(System.Int32)">
            <summary>
            Reopens a case with the ID specified in the request.
            </summary>
            <short>Reopen a case</short> 
            <category>Cases</category>
            <param type="System.Int32, System" method="url" name="caseid" optional="false">Case ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">
            Case
            </returns>
            <path>api/2.0/crm/case/{caseid}/reopen</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCases(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Creates a case with the parameters specified in the request.
            </summary>
            <short>Create a case</short> 
            <param type="System.String, System" name="title" optional="false">Case title</param>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="members" optional="true">List of contact IDs of the case participants</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32, System.String}}, System.Collections.Generic" name="customFieldList" optional="true">List of case custom fields</param>
            <param type="System.Boolean, System" name="isPrivate" optional="true">Case privacy: private or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="accessList" optional="true">List of users with access to the case</param>
            <param type="System.Boolean, System" name="isNotify" optional="true">Notifies users from the access list about the case</param>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">Case</returns>
            <category>Cases</category>
            <exception cref="T:System.ArgumentException"></exception>
            <example>
            <![CDATA[
            
            Data transfer in application/json format:
            
            data: {
               title: "Exhibition organization",
               isPrivate: false,
               customFieldList: [{1: "value for text custom field with id = 1"}]
            }
            
            ]]>
            </example>
            <path>api/2.0/crm/case</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCases(System.Int32,System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Updates the selected case with the parameters specified in the request.
            </summary>
            <short>Update a case</short> 
            <param type="System.Int32, System" method="url" name="caseid" optional="false">Case ID</param>
            <param type="System.String, System" name="title" optional="false">New case title</param>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="members" optional="true">List of contact IDs of the case participants</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32, System.String}}, System.Collections.Generic" name="customFieldList" optional="true">New list of case custom fields</param>
            <param type="System.Boolean, System" name="isPrivate" optional="true">Case privacy: private or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="accessList" optional="true">New list of users with access to the case</param>
            <param type="System.Boolean, System" name="isNotify" optional="true">Notifies users from the access list about the case</param>
            <category>Cases</category>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">Case</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <example>
            <![CDATA[
            
            Data transfer in application/json format:
            
            data: {
               caseid: 0,
               title: "Exhibition organization",
               isPrivate: false,
               customFieldList: [{1: "value for text custom field with id = 1"}]
            }
            
            ]]>
            </example>
            <path>api/2.0/crm/case/{caseid}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToCases(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the selected case with the parameters specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="caseid" optional="false">Case ID</param>
            <param type="System.Boolean, System" name="isPrivate" optional="false">Case privacy: private or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="accessList" optional="false">List of users with access to the case</param>
            <short>Set access rights to the case</short> 
            <category>Cases</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">
            Case 
            </returns>
            <path>api/2.0/crm/case/{caseid}/access</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchCases(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of cases with the IDs specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="casesid">List of case IDs</param>
            <param type="System.Boolean, System" name="isPrivate">Case privacy: private or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="accessList">List of users with access</param>
            <short>Set access rights to the cases by IDs</short> 
            <category>Cases</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">
            List of cases
            </returns>
            <path>api/2.0/crm/case/access</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchCases(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>
             Sets access rights to the list of all the cases matching the parameters specified in the request.
             </summary>
             <param type="System.Int32, System" optional="true" name="contactid">Contact ID</param>
             <param type="System.Nullable{System.Boolean}, System" optional="true" name="isClosed">Case status: closed or not</param>
             <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Case tags</param>
             <param type="System.Boolean, System" name="isPrivate">Case privacy: private or not</param>
             <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="accessList">List of users with access</param>
             <short>Set access rights to the cases by parameters</short> 
             <category>Cases</category>
             <exception cref="T:System.ArgumentException"></exception>
             <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">
             List of cases
             </returns>
             <path>api/2.0/crm/case/filter/access</path>
             <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCaseByID(System.Int32)">
             <summary>
             Returns the detailed information about a case with the ID specified in the request.
             </summary>
             <short>Get a case by ID</short> 
             <category>Cases</category>
             <param type="System.Int32, System" method="url" name="caseid">Case ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/case/{caseid}</path>
            <httpMethod>GET</httpMethod>
             <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">Case</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCases(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of all the cases matching the parameters specified in the request.
            </summary>
            <short>Get cases</short> 
            <param type="System.Int32, System" method="url" optional="true" name="contactid">Contact ID</param>
            <param type="System.Nullable{System.Boolean}, System" method="url" optional="true" name="isClosed">Case status: closed or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" method="url" optional="true" name="tags">Case tags</param>
            <category>Cases</category>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">
            List of cases
            </returns>
            <path>api/2.0/crm/case/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteCase(System.Int32)">
            <summary>
            Deletes a case with the ID specified in the request.
            </summary>
            <short>Delete a case</short> 
            <param type="System.Int32, System" method="url" name="caseid">Case ID</param>
            <category>Cases</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">
            Case
            </returns>
            <path>api/2.0/crm/case/{caseid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchCases(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of cases with the IDs specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="casesids">List of case IDs</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete cases by IDs</short> 
            <category>Cases</category>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">
            List of cases
            </returns>
            <path>api/2.0/crm/case</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchCases(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes a list of all the cases matching the parameters specified in the request.
            </summary>
            <param type="System.Int32, System" optional="true" name="contactid">Contact ID</param>
            <param type="System.Nullable{System.Boolean}, System" optional="true" name="isClosed">Case status: closed or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Case tags</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete cases by parameters</short> 
            <category>Cases</category>
            <returns type="ASC.Api.CRM.Wrappers.CasesWrapper, ASC.Api.CRM">
            List of cases
            </returns>
            <path>api/2.0/crm/case/filter</path>
            <httpMethod>DELETE</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCasesMembers(System.Int32)">
             <summary>
             Returns a list of all the contacts related to the case with the ID specified in the request.
             </summary>
             <short>Get case contacts</short> 
             <param type="System.Int32, System" method="url" name="caseid">Case ID</param>
             <category>Cases</category>
             <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">List of contacts</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/case/{caseid}/contact</path>
            <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddMemberToCases(System.Int32,System.Int32)">
            <summary>
            Adds the selected contact to the case with the ID specified in the request.
            </summary>
            <short>Add a case contact</short> 
            <category>Cases</category>
            <param type="System.Int32, System" method="url" name="caseid">Case ID</param>
            <param type="System.Int32, System" name="contactid">Contact ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Contact
            </returns>
            <path>api/2.0/crm/case/{caseid}/contact</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteMemberFromCases(System.Int32,System.Int32)">
            <summary>
            Deletes the selected contact from the case with the ID specified in the request.
            </summary>
            <short>Delete a case contact</short> 
            <category>Cases</category>
            <param type="System.Int32, System" method="url" name="caseid">Case ID</param>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Contact
            </returns>
            <path>api/2.0/crm/case/{caseid}/contact/{contactid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCasesByPrefix(System.String,System.Int32)">
            <summary>
            Returns a list of 30 cases from the CRM module with a prefix specified in the request.
            </summary>
            <param type="System.String, System" optional="true" name="prefix">Case prefix</param>
            <param type="System.Int32, System" optional="true" name="contactID">Contact ID</param>
            <category>Cases</category>
            <returns>
            List of cases
            </returns>
            <path>api/2.0/crm/case/byprefix</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfoCategory(ASC.CRM.Core.ContactInfoType)">
            <summary>
            Returns a list of all the available contact categories of the specified information type.
            </summary>
            <param type="ASC.CRM.Core.ContactInfoType, ASC.CRM.Core" method="url" name="infoType">Contact information type</param>
            <short>Get contact categories by information type</short> 
            <category>Contacts</category>
            <returns>
            List of contact categories
            </returns>
            <path>api/2.0/crm/contact/data/{infoType}/category</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfoType">
            <summary>
            Returns a list of all the available contact information types.
            </summary>
            <short>Get contact information types</short> 
            <category>Contacts</category>
            <returns>List of all the contact information types</returns>
            <collection>list</collection>
            <path>api/2.0/crm/contact/data/infoType</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfo(System.Int32)">
            <summary>
            Returns the detailed information on the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <short>Get contact information</short> 
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactInfoWrapper, ASC.Api.CRM">
            Contact information
            </returns>
            <path>api/2.0/crm/contact/{contactid}/data</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfoByID(System.Int32,System.Int32)">
             <summary>
             Returns the detailed contact information with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
             <param type="System.Int32, System" method="url" name="id">Contact information ID</param>
             <short>Get contact information by ID</short> 
             <category>Contacts</category>
             <returns type="ASC.Api.CRM.Wrappers.ContactInfoWrapper, ASC.Api.CRM">Contact information</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/contact/{contactid}/data/{id}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateContactInfo(System.Int32,ASC.CRM.Core.ContactInfoType,System.String,System.Boolean,System.String)">
             <summary>
             Adds the information with the parameters specified in the request to the contact with the selected ID.
             </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="ASC.CRM.Core.ContactInfoType, ASC.CRM.Core" name="infoType">Contact information type</param>
            <param type="System.String, System" name="data">New data</param>
            <param type="System.Boolean, System" name="isPrimary">Contact information importance: primary or not</param>
            <param type="System.String, System" name="category">Contact information category</param>
            <short>Add contact information</short> 
            <category>Contacts</category>
             <seealso cref="M:ASC.Api.CRM.CRMApi.GetContactInfoType"/>
             <seealso cref="M:ASC.Api.CRM.CRMApi.GetContactInfoCategory(ASC.CRM.Core.ContactInfoType)"/>
             <returns type="ASC.Api.CRM.Wrappers.ContactInfoWrapper,  ASC.Api.CRM">
             Contact information
             </returns> 
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/contact/{contactid}/data</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateContactInfoAddress(System.Int32,ASC.Api.CRM.Wrappers.Address)">
            <summary>
            Adds the address information to the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="ASC.Api.CRM.Wrappers.Address, ASC.Api.CRM.Wrappers" name="address">Address data</param>
            <short>Add contact address information</short> 
            <category>Contacts</category>
            <seealso cref="M:ASC.Api.CRM.CRMApi.GetContactInfoType"/>
            <seealso cref="M:ASC.Api.CRM.CRMApi.GetContactInfoCategory(ASC.CRM.Core.ContactInfoType)"/>
            <returns type="ASC.Api.CRM.Wrappers.ContactInfoWrapper, ASC.Api.CRM">
            Contact information
            </returns> 
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/contact/{contactid}/addressdata</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateBatchContactInfo(System.Int32,System.Collections.Generic.IEnumerable{ASC.Api.CRM.Wrappers.ContactInfoWrapper})">
             <summary>
             Adds a list of contact information items with the parameters specified in the request for the contact with the selected ID.
             </summary>
            <short>Add contact information items</short> 
             <param type="System.Int32, System" name="contactid">Contact ID</param>
             <param type="System.Collections.Generic.IEnumerable{ASC.Api.CRM.Wrappers.ContactInfoWrapper}, System.Collections.Generic" name="items">Contact information</param>
             <remarks>
             <![CDATA[
              Items have the following format:
              [{infoType : 1, category : 1, categoryName : 'work', data : "myemail@email.com", isPrimary : true}, {infoType : 0, category : 0, categoryName : 'home', data : "+8999111999111", isPrimary : true}]
             ]]>
             </remarks>
             <category>Contacts</category>
             <exception cref="T:System.ArgumentException"></exception>
             <returns>
             Contact information
             </returns>
             <path>api/2.0/crm/contact/{contactid}/batch</path>
             <httpMethod>POST</httpMethod>
             <collection>list</collection>
             <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactInfo(System.Int32,System.Int32,System.Nullable{ASC.CRM.Core.ContactInfoType},System.String,System.Nullable{System.Boolean},System.String)">
             <summary>
             Updates the contact information with the parameters specified in the request.
             </summary>
            <param type="System.Int32, System" method="url" name="id">Contact information record ID</param>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="System.Nullable{ASC.CRM.Core.ContactInfoType}, System" optional="true" name="infoType">New contact information type</param>
            <param type="System.String, System" name="data">New data</param>
            <param type="System.Nullable{System.Boolean}, System" optional="true" name="isPrimary">New contact information importance: primary or not</param>
            <param type="System.String, System" optional="true" name="category">New contact information category</param>
            <short>Update contact information</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.ContactInfoWrapper, ASC.Api.CRM">
             Updated contact information
             </returns>
             <path>api/2.0/crm/contact/{contactid}/data/{id}</path>
             <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactInfoAddress(System.Int32,System.Int32,ASC.Api.CRM.Wrappers.Address)">
            <summary>
            Updates the contact address information with the parameter specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Contact information record ID</param>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="ASC.Api.CRM.Wrappers.Address, ASC.Api.CRM.Wrappers" name="address">New address data</param>
            <short>Update contact address information</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactInfoWrapper, ASC.Api.CRM">
            Contact information with the updated address
            </returns>
            <path>api/2.0/crm/contact/{contactid}/addressdata/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateBatchContactInfo(System.Int32,System.Collections.Generic.IEnumerable{ASC.Api.CRM.Wrappers.ContactInfoWrapper})">
             <summary>
             Updates the contact information items with the parameters specified in the request for the contact with the selected ID.
             </summary>
            <short>Update contact information items</short> 
            <param type="System.Int32, System" name="contactid">Contact ID</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.CRM.Wrappers.ContactInfoWrapper}, System.Collections.Generic" name="items">New contact information</param>
             <![CDATA[
              Items have the following format:
              [{infoType : 1, category : 1, categoryName : 'work', data : "myemail@email.com", isPrimary : true}, {infoType : 0, category : 0, categoryName : 'home', data : "+8999111999111", isPrimary : true}]
             ]]>
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
             <returns>
             Updated contact information
             </returns>
             <path>api/2.0/crm/contact/{contactid}/batch</path>
             <httpMethod>PUT</httpMethod>
             <collection>list</collection>
             <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfo(System.Int32,ASC.CRM.Core.ContactInfoType)">
            <summary>
            Returns the detailed contact information by the information type specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="ASC.CRM.Core.ContactInfoType, ASC.CRM.Core" method="url" name="infoType">Contact information type</param>
            <short>Get contact information by its type</short> 
            <category>Contacts</category>
            <returns>
            Contact information
            </returns>
            <path>api/2.0/crm/contact/{contactid}/data/{infoType}</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactInfo(System.Int32,System.Int32)">
            <summary>
            Deletes the selected information from the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="System.Int32, System" method="url" name="id">Contact information record ID</param>
            <short>Delete contact information</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactInfoWrapper, ASC.Api.CRM">
            Contact information
            </returns>
            <path>api/2.0/crm/contact/{contactid}/data/{id}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactByID(System.Int32)">
            <summary>
            Returns the detailed information about a contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">Contact</returns>
            <short>Get a contact by ID</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/contact/{contactid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactsByProjectID(System.Int32)">
             <summary>
             Returns contacts for the project with the ID specified in the request.
             </summary>
             <short>
             Get contacts by project ID
             </short>
             <param type="System.Int32, System" method="url" name="projectid">Project ID</param>
             <category>Contacts</category>
             <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
             List of contacts
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/contact/project/{projectid}</path>
            <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetRelativeContactToProject(System.Int32,System.Int32)">
            <summary>
            Links the selected contact to the project with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="System.Int32, System" method="url" name="projectid">Project ID</param>
            <category>Contacts</category>
            <short>Link a contact to the project</short> 
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">Contact information</returns>
            <path>api/2.0/crm/contact/{contactid}/project/{projectid}</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetRelativeContactListToProject(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Links the selected contacts to the project with the ID specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="contactid">Array of contact IDs</param>
            <param type="System.Int32, System" method="url" name="projectid">Project ID</param>
            <category>Contacts</category>
            <short>Link contacts to the project</short> 
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            List of contacts
            </returns>
            <path>api/2.0/crm/contact/project/{projectid}</path>
            <httpMethod>POST</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.RemoveRelativeContactToProject(System.Int32,System.Int32)">
            <summary>
            Removes a link to the selected project from the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="System.Int32, System" method="url" name="projectid">Project ID</param>
            <category>Contacts</category>
            <short>Remove a contact from the project</short> 
            <returns type="ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM">
            Contact information
            </returns>
            <path>api/2.0/crm/contact/{contactid}/project/{projectid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddDealToContact(System.Int32,System.Int32)">
            <summary>
            Adds the selected opportunity to the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <short>Add a contact opportunity</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
            Opportunity
            </returns>
            <path>api/2.0/crm/contact/{contactid}/opportunity/{opportunityid}</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteDealFromContact(System.Int32,System.Int32)">
            <summary>
            Deletes the selected opportunity from the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <short>Delete a contact opportunity</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
            Opportunity
            </returns>
            <path>api/2.0/crm/contact/{contactid}/opportunity/{opportunityid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContacts(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},ASC.CRM.Core.ContactListViewType,System.Nullable{System.Guid},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of all the contacts in the CRM module matching the parameters specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" method="url" optional="true" name="tags">Contact tag</param>
            <param type="System.Nullable{System.Int32}, System" method="url" optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param type="System.Nullable{System.Int32}, System" method="url" optional="true" name="contactType">Contact type ID</param>
            <param type="ASC.CRM.Core.ContactListViewType, ASC.CRM.Core" method="url" optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param type="System.Nullable{System.Guid}, System" method="url" optional="true" name="responsibleid">Responsible ID</param>
            <param type="System.Nullable{System.Boolean}, System" method="url" optional="true" name="isShared">Contact privacy: private or not</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" optional="true" name="fromDate">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" optional="true" name="toDate">End date</param>
            <short>Get filtered contacts</short> 
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            List of contacts
            </returns>
            <path>api/2.0/crm/contact/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SearchContactsByEmail(System.String,System.Int32)">
            <summary>
            Searches for contacts by their emails.
            </summary>
            <param type="System.String, System" name="term">String part of contact name, lastname or email</param>
            <param type="System.Int32, System" name="maxCount">Maximum result count</param>
            <short>Search contacts by email</short> 
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
            <path>api/2.0/crm/contact/simple/byEmail</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetSimpleContacts(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},ASC.CRM.Core.ContactListViewType,System.Nullable{System.Guid},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of all the contacts with their tasks in the CRM module matching the parameters specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Contact tags</param>
            <param type="System.Nullable{System.Int32}, System" optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param type="System.Nullable{System.Int32}, System" optional="true" name="contactType">Contact type ID</param>
            <param type="ASC.CRM.Core.ContactListViewType, ASC.CRM.Core" optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param type="System.Nullable{System.Guid}, System" optional="true" name="responsibleid">Responsible ID</param>
            <param type="System.Nullable{System.Boolean}, System" optional="true" name="isShared">Contact privacy: private or not</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="fromDate">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="toDate">End date</param>
            <short>Get filtered contacts with tasks</short> 
            <category>Contacts</category>
            <returns>
            List of contacts with tasks
            </returns>
            <path>api/2.0/crm/contact/simple/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactsForMail(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns a group of contacts with the IDs specified in the request and their emails.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="contactids">List of contact IDs</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Get contacts with emails</short> 
            <category>Contacts</category>
            <returns>
            List of contacts with their emails
            </returns>
            <path>api/2.0/crm/contact/mail</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchContacts(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},ASC.CRM.Core.ContactListViewType,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Deletes a list of all the contacts in the CRM module matching the parameters specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Contact tags</param>
            <param type="System.Int32, System" optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param type="System.Int32, System" optional="true" name="contactType">Contact type ID</param>
            <param type="ASC.CRM.Core.ContactListViewType, ASC.CRM.Core" optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="fromDate">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="toDate">End date</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete contacts by parameters</short> 
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM">
            List of contacts
            </returns>
            <path>api/2.0/crm/contact/filter</path>
            <httpMethod>DELETE</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetPeopleFromCompany(System.Int32)">
            <summary>
            Returns a list of all the persons linked to the company with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="companyid">Company ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <short>Get company persons</short> 
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Company persons
            </returns>
            <path>api/2.0/crm/contact/company/{companyid}/person</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddPeopleToCompany(System.Int32,System.Int32)">
            <summary>
            Adds the selected person to the company with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" optional="true"  name="companyid">Company ID</param>
            <param type="System.Int32, System" optional="true" name="personid">Person ID</param>
            <short>Add a person to the company</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.PersonWrapper, ASC.Api.CRM">
            Person
            </returns>
            <path>api/2.0/crm/contact/company/{companyid}/person</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeletePeopleFromCompany(System.Int32,System.Int32)">
            <summary>
            Deletes the selected person from the company with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="companyid">Company ID</param>
            <param type="System.Int32, System" optional="true" name="personid">Person ID</param>
            <short>Delete a person from the company</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.PersonWrapper, ASC.Api.CRM">
            Person
            </returns>
            <path>api/2.0/crm/contact/company/{companyid}/person</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreatePerson(System.String,System.String,System.String,System.Int32,System.String,ASC.Web.CRM.Core.Enums.ShareType,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Creates a person with the parameters (first name, last name, description, etc.) specified in the request.
            </summary>
            <param type="System.String, System" name="firstName">First name</param>
            <param type="System.String, System" name="lastName">Last name</param>
            <param type="System.String, System" optional="true"  name="jobTitle">Job title</param>
            <param type="System.Int32, System" optional="true" name="companyId">Company ID</param>
            <param type="System.String, System" optional="true" name="about">Person description text</param>
            <param type="ASC.Web.CRM.Core.Enums.ShareType, ASC.Web.CRM.Core.Enums" name="shareType">Person privacy: 0 - not shared, 1 - shared for reading/writing, 2 - shared for reading only</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" optional="true" name="managerList">List of person managers</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32, System.String}}" optional="true" name="customFieldList">Custom field list</param>
            <param type="System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase}, System.Collections.Generic" optional="true" name="photo">Contact photo (upload using multipart/form-data)</param>
            <short>Create a person</short> 
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.PersonWrapper, ASC.Api.CRM">Person</returns>
            <httpMethod>POST</httpMethod>
            <path>api/2.0/crm/contact/person</path>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ChangeContactPhoto(System.Int32,System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Changes a photo for the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase}, System.Collections.Generic" name="photo">Contact photo (upload using multipart/form-data)</param>
            <short>Change a contact photo</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Path to the contact photo
            </returns>
            <path>api/2.0/crm/contact/{contactid}/changephoto</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ChangeContactPhoto(System.Int32,System.String)">
            <summary>
            Changes a photo using its URL for the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="System.String, System" name="photourl">Contact photo URL</param>
            <short>Change a contact photo by URL</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Path to the contact photo
            </returns>
            <path>api/2.0/crm/contact/{contactid}/changephotobyurl</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.MergeContacts(System.Int32,System.Int32)">
            <summary>
            Merges two contacts specified in the request.
            </summary>
            <param type="System.Int32, System" name="fromcontactid">The first contact ID to merge</param>
            <param type="System.Int32, System" name="tocontactid">The second contact ID to merge</param>
            <short>Merge contacts</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Contact
            </returns>
            <path>api/2.0/crm/contact/merge</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdatePerson(System.Int32,System.String,System.String,System.String,System.Int32,System.String,ASC.Web.CRM.Core.Enums.ShareType,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Updates the selected person with the parameters (first name, last name, description, etc.) specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="personid">Person ID</param>
            <param type="System.String, System" name="firstName">New first name</param>
            <param type="System.String, System" name="lastName">New last name</param>
            <param type="System.String, System" optional="true"  name="jobTitle">New job title</param>
            <param type="System.Int32, System" optional="true" name="companyId">New company ID</param>
            <param type="System.String, System" optional="true" name="about">New person description text</param>
            <param type="ASC.Web.CRM.Core.Enums.ShareType, ASC.Web.CRM.Core.Enums" name="shareType">New person privacy: 0 - not shared, 1 - shared for reading/writing, 2 - shared for reading only</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" optional="true" name="managerList">New list of person managers</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32, System.String}}" optional="true" name="customFieldList">New custom field list</param>
            <param type="System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase}, System.Collections.Generic" optional="true" name="photo">New contact photo (upload using multipart/form-data)</param>
            <short>Update a person</short> 
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.PersonWrapper, ASC.Api.CRM">Person</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/contact/person/{personid}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCompany(System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32},ASC.Web.CRM.Core.Enums.ShareType,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Creates a company with the parameters specified in the request.
            </summary>
            <param type="System.String, System" name="companyName">Company name</param>
            <param type="System.String, System" optional="true" name="about">Company description text</param>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" optional="true" name="personList">List of persons linked to the company</param>
            <param type="ASC.Web.CRM.Core.Enums.ShareType, ASC.Web.CRM.Core.Enums" name="shareType">Company privacy: 0 - not shared, 1 - shared for reading/writing, 2 - shared for reading only</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" optional="true" name="managerList">List of company managers</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32, System.String}}" optional="true" name="customFieldList">Custom field list</param>
            <param type="System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase}, System.Collections.Generic" optional="true" name="photo">Contact photo (upload using multipart/form-data)</param>
            <short>Create a company</short> 
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.CompanyWrapper, ASC.Api.CRM">Company</returns>
            <path>api/2.0/crm/contact/company</path>
            <httpMethod>POST</httpMethod>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCompany(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a list of companies with the names specified in the request.
            </summary>
            <short>
            Create companies
            </short>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" name="companyName">Company names</param>
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM">List of contacts</returns>
            <path>api/2.0/crm/contact/company/quick</path>
            <httpMethod>POST</httpMethod>
            <exception cref="T:System.ArgumentException"></exception>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreatePerson(System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.String,System.String}})">
            <summary>
            Creates a list of persons with the first and last names specified in the request.
            </summary>
            <short>
            Create persons
            </short>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.String, System.String}}, System.Collections.Generic" name="data">Pairs: user first name, user last name</param>
            <remarks>
            <![CDATA[
             Data has the following format:
             [{key: 'First name 1', value: 'Last name 1'}, {key: 'First name 2', value: 'Last name 2'}].
            ]]>
            </remarks>
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM">List of contacts</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/contact/person/quick</path>
            <httpMethod>POST</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCompany(System.Int32,System.String,System.String,ASC.Web.CRM.Core.Enums.ShareType,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}})">
            <summary>
            Updates the selected company with the parameters specified in the request.
            </summary>
            <param type="System.Int32, System"  method="url" name="companyid">Company ID</param>
            <param type="System.String, System"  name="companyName">New company name</param>
            <param type="System.String, System"  optional="true" name="about">New company description text</param>
            <param type="ASC.Web.CRM.Core.Enums.ShareType, ASC.Web.CRM.Core.Enums" name="shareType">New company privacy: 0 - not shared, 1 - shared for reading/writnig, 2 - shared for reading only</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" optional="true" name="managerList">New list of company managers</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32, System.String}}" optional="true" name="customFieldList">New custom field list</param>
            <short>Update a company</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.CompanyWrapper, ASC.Api.CRM">
            Company
            </returns>
            <path>api/2.0/crm/contact/company/{companyid}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactStatus(System.Int32,System.Int32)">
            <summary>
            Updates a status of the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="System.Int32, System" name="contactStatusid">New contact status ID</param>
            <short>Update a contact status by ID</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Contact
            </returns>
            <path>api/2.0/crm/contact/{contactid}/status</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCompanyAndParticipantsStatus(System.Int32,System.Int32)">
            <summary>
            Updates a status of the selected company and all its participants.
            </summary>
            <param type="System.Int32, System" method="url" name="companyid">Company ID</param>
            <param type="System.Int32, System" name="contactStatusid">New contact status ID</param>
            <short>Update a company status</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Company
            </returns>
            <path>api/2.0/crm/contact/company/{companyid}/status</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdatePersonAndItsCompanyStatus(System.Int32,System.Int32)">
            <summary>
            Updates a status of the selected person, related company and all its participants.
            </summary>
            <param type="System.Int32, System" method="url" name="personid">Person ID</param>
            <param type="System.Int32, System" name="contactStatusid">New contact status ID</param>
            <short>Update a person and his company status</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Person
            </returns>
            <path>api/2.0/crm/contact/person/{personid}/status</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactAccessList(System.Int32)">
             <summary>
             Returns access rights of the contact with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" name="contactid">Contact ID</param>
             <short>Get contact access rights</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
             <returns type="ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee">List of contacts</returns>
             <path>api/2.0/crm/contact/{contactid}/access</path>
             <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToContact(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>
             Sets access rights to the contact with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
             <param type="System.Boolean, System" name="isShared">Contact privacy: private or not</param>
             <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="managerList">List of managers</param>
             <short>Set contact access rights</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
             Contact
             </returns>
             <path>api/2.0/crm/contact/{contactid}/access</path>
             <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchContact(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of contacts with the IDs specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="contactid">List of contact IDs</param>
            <param type="System.Boolean, System" name="isShared">Company privacy: shared or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="managerList">List of managers</param>
            <short>Set access rights to the contacts by IDs</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            List of contacts
            </returns>
            <path>api/2.0/crm/contact/access</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchContact(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},ASC.CRM.Core.ContactListViewType,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of contacts with the parameters specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Contact tags</param>
            <param type="System.Nullable{System.Int32}, System" optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param type="System.Nullable{System.Int32}, System" optional="true" name="contactType">Contact type ID</param>
            <param type="ASC.CRM.Core.ContactListViewType, ASC.CRM.Core" optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="fromDate">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="toDate">End date</param>
            <param type="System.Boolean, System" name="isPrivate">Contact privacy: private or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="managerList">List of managers</param>
            <short>Set access rights to the contacts by parameters</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            List of contacts
            </returns>
            <path>api/2.0/crm/contact/filter/access</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContact(System.Int32)">
            <summary>
            Deletes a contact with the ID specified in the request from the portal.
            </summary>
            <short>Delete a contact</short> 
            <category>Contacts</category>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Contact
            </returns>
            <path>api/2.0/crm/contact/{contactid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchContacts(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of contacts with the IDs specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="contactids">List of contact IDs</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete contacts by IDs</short> 
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM">
            List of contacts
            </returns>
            <path>api/2.0/crm/contact</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactsByPrefix(System.String,System.Int32,ASC.CRM.Core.EntityType,System.Int32)">
            <summary>
            Returns a list of 30 contacts from the CRM module with a prefix specified in the request.
            </summary>
            <short>Get contacts by prefix</short>
            <param type="System.String, System" optional="true" name="prefix">Contact prefix</param>
            <param type="System.Int32, System" optional="false" name="searchType" remark="Allowed values: -1 (Any), 0 (Company), 1 (Persons), 2 (PersonsWithoutCompany), 3 (CompaniesAndPersonsWithoutCompany)">Contact search type</param>
            <param type="ASC.CRM.Core.EntityType, ASC.CRM.Core" optional="true" name="entityType">Contact entity type</param>
            <param type="System.Int32, System" optional="true" name="entityID">Contact entity ID</param>
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
            <path>api/2.0/crm/contact/byprefix</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactsByContactInfo(System.Nullable{ASC.CRM.Core.ContactInfoType},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of contacts from the CRM module with the contact information specified in the request.
            </summary>
            <param type="System.Nullable{ASC.CRM.Core.ContactInfoType}, System" method="url" optional="false" name="infoType">Contact information type</param>
            <param type="System.String, System" method="url" optional="false" name="data">Contact data</param>
            <param type="System.Nullable{System.Int32}, System" method="url" optional="true" name="category">Contact category</param>
            <param type="System.Nullable{System.Boolean}, System" method="url" optional="true" name="isPrimary">Contact importance: primary or not</param>
            <short>Get contacts by contact information</short>
            <category>Contacts</category>
            <remarks>Please note that if the contact data from the "data" parameter refers to one of the contact information types, then the "infoType" parameter must be specified. For example, the "Paris" contact information is related to the "Address" information type.</remarks>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            List of contacts
            </returns>
            <path>api/2.0/crm/contact/bycontactinfo</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetUserTweets(System.Int32,System.Int32)">
            <summary>
            Returns a certain number of tweets created by a user with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <param type="System.Int32, System" method="url" name="count">Number of tweets</param>
            <short>Get user tweets</short>
            <category>Contacts</category>
            <returns type="ASC.Thrdparty.Message, ASC.Thrdparty">List of tweets</returns>
            <path>api/2.0/crm/contact/{contactid}/tweets</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.FindTwitterProfiles(System.String)">
            <summary>
            Returns a list of twitter profiles by the search text specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="searchText">Search text</param>
            <short>Get twitter profiles</short>
            <category>Contacts</category>
            <returns type="ASC.Thrdparty.Twitter.TwitterUserInfo, ASC.Thrdparty">List of twitter profiles</returns>
            <path>api/2.0/crm/contact/twitterprofile</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactAvatar(System.Int32,System.String,System.Boolean)">
            <summary>
            Deletes an avatar of the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactId">Contact ID</param>
            <param type="System.String, System" name="contactType">Contact type</param>
            <param type="System.Boolean, System" name="uploadOnly">Defines whether to upload a new avatar only or also delete an old one</param>
            <short>Delete a contact avatar</short>
            <category>Contacts</category>
            <returns>Default photo</returns>
            <path>api/2.0/crm/contact/{contactid}/avatar</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactSMImages(System.Int32)">
            <summary>
            Returns a list of the social media images for the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="contactId">Contact ID</param>
            <short>Get contact social media images by contact ID</short>
            <category>Contacts</category>
            <returns type="ASC.Web.CRM.Classes.SocialMedia.SocialMediaImageDescription, ASC.Web.CRM">List of social media images</returns>
            <path>api/2.0/crm/contact/{contactid}/socialmediaavatar</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactSMImagesByNetworks(System.Collections.Generic.List{ASC.Api.CRM.Wrappers.ContactInfoWrapper})">
            <summary>
            Returns a list of the contact social media images from the social networks specified in the request.
            </summary>
            <param type="System.Collections.Generic.List{ASC.Api.CRM.Wrappers.ContactInfoWrapper}, System.Collections.Generic" name="socialNetworks">List of contact social networks</param>
            <short>Get contact social media images by networks</short>
            <category>Contacts</category>
            <returns type="ASC.Web.CRM.Classes.SocialMedia.SocialMediaImageDescription, ASC.Web.CRM">List of social media images</returns>
            <path>api/2.0/crm/contact/socialmediaavatar</path>
            <httpMethod>POST</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UploadUserAvatarFromSocialNetwork(System.Int32,ASC.Thrdparty.SocialNetworks,System.String,System.Boolean,System.String)">
            <summary>
            Uploads an avatar of the contact with the ID specified in the request from the social network.
            </summary>
            <param type="System.Int32, System" method="url" name="contactId">Contact ID</param>
            <param type="ASC.Thrdparty.SocialNetworks, ASC.Thrdparty" name="socialNetwork">Contact social network</param>
            <param type="System.String, System" name="userIdentity">User identity</param>
            <param type="System.Boolean, System" name="uploadOnly">Defines whether to upload an avatar only or also save it to a folder</param>
            <param type="System.String, System" name="tmpDirName" visible="false">Temporary directory name</param>
            <short>Upload an avatar from social network</short>
            <category>Contacts</category>
            <returns type="ASC.Web.CRM.Classes.ContactPhotoManager.PhotoData, ASC.Web.CRM">Avatar</returns>
            <path>api/2.0/crm/contact/{contactid}/avatar</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SendMailSMTPToContacts(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String,System.Boolean)">
            <summary>
            Sends a mail through SMTP to the contacts with the IDs specified in the request.
            </summary>
            <param type="System.Collections.Generic.List{System.Int32}, System.Collections.Generic" name="fileIDs">File IDs</param>
            <param type="System.Collections.Generic.List{System.Int32}, System.Collections.Generic" name="contactIds">Contact IDs</param>
            <param type="System.String, System" name="subject">Mail subject</param>
            <param type="System.String, System" name="body">Mail body</param>
            <param type="System.Boolean, System" name="storeInHistory" visible="false">Defines if a mail will be stored in the history or not</param>
            <short>Send a mail</short>
            <category>Contacts</category>
            <returns>Mail</returns>
            <path>api/2.0/crm/contact/mailsmtp/send</path>
            <httpMethod>POST</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetMailSMTPToContactsPreview(System.String,System.Int32)">
            <summary>
            Returns a preview of a mail sent through SMTP to the contact with the ID specified in the request.
            </summary>
            <param type="System.String, System" name="template">Mail template</param>
            <param type="System.Int32, System" name="contactId">Contact ID</param>
            <short>Get a mail preview</short>
            <category>Contacts</category>
            <returns>Mail preview</returns>
            <path>api/2.0/crm/contact/mailsmtp/preview</path>
            <httpMethod>POST</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetMailSMTPToContactsStatus">
            <summary>
            Returns a status of a mail sent through SMTP to the current contact.
            </summary>
            <short>Get a mail status</short>
            <category>Contacts</category>
            <returns>Mail status</returns>
            <path>api/2.0/crm/contact/mailsmtp/status</path>
            <httpMethod>GET</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CancelMailSMTPToContacts">
            <summary>
            Cancels the mail sending through SMTP to the current contacts.
            </summary>
            <short>Cancel mail sending</short>
            <category>Contacts</category>
            <returns>Mail status</returns>
            <path>api/2.0/crm/contact/mailsmtp/cancel</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetContactCreationDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
            Sets the creation date of a contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="contactId">Contact ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="creationDate">Contact creation date</param>
            <short>Set the contact creation date</short>
            <category>Contacts</category>
            <path>api/2.0/crm/contact/{contactid}/creationdate</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetContactLastModifedDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
            Sets the last modified date of a contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="contactId">Contact ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="lastModifedDate">Contact last modified date</param>
            <short>Set the contact last modified date</short>
            <path>api/2.0/crm/contact/{contactid}/lastmodifeddate</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="P:ASC.Api.CRM.CRMApi.Name">
            <summary>
             Api name entry
            </summary>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.#ctor(ASC.Api.Impl.ApiContext)">
            <summary>
             Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCustomFieldDefinitions(System.String)">
             <summary>
             Returns a list of descriptions for all the existing custom fields.
             </summary>
             <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
             <short>Get custom fields</short> 
             <category>Custom fields</category>
            <returns type="ASC.Api.CRM.Wrappers.CustomFieldWrapper, ASC.Api.CRM">
             List of custom fields
             </returns>
             <path>api/2.0/crm/{entityType}/customfield/definitions</path>
             <httpMethod>GET</httpMethod>
            <exception cref="T:System.ArgumentException"></exception>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCustomFieldForSubject(System.String,System.Int32)">
            <summary>
            Returns a list of all the custom fields for the entity type and ID specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Entity ID</param>
            <short>Get entity custom fields</short> 
            <category>Custom fields</category>
            <returns type="ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper, ASC.Api.CRM">List of entity custom fields</returns>
            <path>api/2.0/crm/{entityType}/{entityid}/customfield</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetEntityCustomFieldValue(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Sets the selected custom field to the entity with type and ID specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Entity ID</param>
            <param type="System.Int32, System" method="url" name="fieldid">Field ID</param>
            <param type="System.String, System" name="fieldValue">Field value</param>
            <short>Set an entity custom field</short> 
            <category>Custom fields</category>
            <returns type="ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper, ASC.Api.CRM">
            Custom field
            </returns>
            <path>api/2.0/crm/{entityType}/{entityid}/customfield/{fieldid}</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCustomFieldValue(System.String,System.String,System.Int32,System.Int32,System.String)">
             <summary>
             Creates a new custom field with the parameters (entity type, field title, type, etc.) specified in the request.
             </summary>
             <param type="System.String, System" method="url" optional="false" name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
             <param type="System.String, System" optional="false" name="label">Field title</param>
             <param type="System.Int32, System" name="fieldType" 
             remark="Allowed values: 0 (TextField), 1 (TextArea), 2 (SelectBox), 3 (CheckBox), 4 (Heading), or 5 (Date)">
              Custom field type
             </param>
             <param type="System.Int32, System" optional="true" name="position">Field position</param>
             <param type="System.String, System" optional="true" name="mask" remark="Sent in JSON format only" >Mask</param>
             <short>Create a custom field</short> 
             <category>Custom fields</category>
             <returns type="ASC.Api.CRM.Wrappers.CustomFieldWrapper, ASC.Api.CRM">
             Custom field
             </returns>
            <example>
             <![CDATA[
             
             Data transfer in application/json format:
             
             1) Creation of the TextField custom field:
             
             data: {
                entityType: "contact",
                label: "Sample TextField",
                fieldType: 0,
                position: 0,
                mask: {"size":"40"}  // This is the TextField size. All other values are ignored.
             }
             
             
             2) Creation of the TextArea custom field:
             
             data: {
                entityType: "contact",
                label: "Sample TextArea",
                fieldType: 1,
                position: 1,
                mask: '{"rows":"2","cols":"30"}' // This is the TextArea size. All other values are ignored.
             }
             
             
             3) Creation of the SelectBox custom field:
             
             data: {
                entityType: "contact",
                label: "Sample SelectBox",
                fieldType: 2,
                position: 0,
                mask: ["1","2","3"]  // These are the SelectBox values.
             }
             
             
             
             4) Creation of the CheckBox custom field:
             
             data: {
                entityType: "contact",
                label: "Sample CheckBox",
                fieldType: 3,
                position: 0,
                mask: ""     
             }
             
             
             
             5) Creation of the Heading custom field:
             
             data: {
                entityType: "contact",
                label: "Sample Heading",
                fieldType: 4,
                position: 0,
                mask: "" 
             }
             
             
             
             6) Creation of the Date custom field:
             
             data: {
                entityType: "contact",
                label: "Sample Date",
                fieldType: 5,
                position: 0,
                mask: "" 
             }
             
             
             ]]>
             </example>
             <path>api/2.0/crm/{entityType}/customfield</path>
             <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCustomFieldValue(System.Int32,System.String,System.String,System.Int32,System.Int32,System.String)">
             <summary>
             Updates the selected custom field with the parameters (entity type, field title, type, etc.) specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="id">Custom field ID</param>
             <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, person, company, opportunity, case">New entity type</param>
             <param type="System.String, System" optional="false" name="label">New field title</param>
             <param type="System.Int32, System" name="fieldType" 
             remark="Allowed values: 0 (TextField), 1 (TextArea), 2 (SelectBox), 3 (CheckBox), 4 (Heading), or 5 (Date)">
              New custom field type
             </param>
             <param type="System.Int32, System" optional="true" name="position">New field position</param>
             <param type="System.String, System" optional="true" name="mask" remark="Sent in json format only" >New mask</param>
             <short>Update a custom field</short> 
             <category>Custom fields</category>
             <returns type="ASC.Api.CRM.Wrappers.CustomFieldWrapper, ASC.Api.CRM">
             Updated custom field
             </returns>
            <remarks>
             <![CDATA[
              You can update field if there are no related elements. If such elements exist, only label and mask will be updated. Other parameters will be ignored.
             ]]>
             </remarks>
             <exception cref="T:System.ArgumentException"></exception>
             <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <path>api/2.0/crm/{entityType}/customfield/{id}</path>
             <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteCustomField(System.String,System.Int32)">
            <summary>
            Deletes a custom field with the ID specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
            <param type="System.Int32, System" method="url" name="fieldid">Field ID</param>
            <short>Delete a custom field</short> 
            <category>Custom fields</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.CustomFieldWrapper, ASC.Api.CRM">
            Custom field
            </returns>
            <path>api/2.0/crm/{entityType}/customfield/{fieldid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCustomFieldsOrder(System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Updates the order of the custom fields with a list specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="fieldids">List of custom field IDs</param>
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
            <short>Update the order of custom fields</short> 
            <category>Custom fields</category>
            <returns type="ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper, ASC.Api.CRM">
            Custom fields in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/{entityType}/customfield/reorder</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealByID(System.Int32)">
             <summary>
             Returns the detailed information about an opportunity with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
             <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
             Opportunity
             </returns>
             <short>Get an opportunity</short> 
             <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/opportunity/{opportunityid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateToDealMilestone(System.Int32,System.Int32)">
             <summary>
             Updates the selected opportunity to the stage with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
             <param type="System.Int32, System" name="stageid">New opportunity stage ID</param>
             <returns type="ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM">
             Opportunity with the updated stage
             </returns>
             <short>Update an opportunity stage by ID</short> 
             <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/opportunity/{opportunityid}/stage/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToDeal(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>
             Sets access rights to the selected opportunity with the parameters specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
             <param type="System.Boolean, System" name="isPrivate">Opportunity privacy: private or not</param>
             <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="accessList">List of users with access rights</param>
             <short>Set opportunity access rights</short> 
             <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
             Opportunity 
             </returns>
             <path>api/2.0/crm/opportunity/{opportunityid}/access</path>
             <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchDeal(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{ASC.CRM.Core.DealMilestoneStatus},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of all the opportunities matching the parameters specified in the request.
            </summary>
            <param type="System.Guid, System" optional="true" name="responsibleid">Opportunity responsible ID</param>
            <param type="System.Int32, System" optional="true" name="opportunityStagesid">Opportunity stage ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Opportunity tags</param>
            <param type="System.Int32, System" optional="true" name="contactid">Contact ID</param>
            <param type="System.Nullable{ASC.CRM.Core.DealMilestoneStatus}, System" optional="true" name="stageType" remark="Allowed values: 0 (Open), 1 (ClosedAndWon), 2 (ClosedAndLost)">Opportunity stage type</param>
            <param type="System.Nullable{System.Boolean}, System" optional="true" name="contactAlsoIsParticipant">Participation status: take into account opportunities where the contact is a participant or not</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="fromDate">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="toDate">End date</param>
            <param type="System.Boolean, System" name="isPrivate">Opportunity privacy: private or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="accessList">List of users with access rights</param>
            <short>Set access rights to the filtered opportunities</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
            List of opportunities
            </returns>
            <path>api/2.0/crm/opportunity/filter/access</path>
            <httpMethod>PUT</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchDeal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of opportunities with the IDs specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="opportunityid">List of opportunity IDs</param>
            <param type="System.Boolean, System" name="isPrivate">Opportunity privacy: private or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="accessList">List of users with access rights</param>
            <short>Set access rights to the opportunities by IDs</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
            List of opportunities
            </returns>
            <path>api/2.0/crm/opportunity/access</path>
            <httpMethod>PUT</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchDeals(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of opportunities with the IDs specified in the request.
            </summary>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="opportunityids">List of opportunity IDs</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete opportunities by IDs</short> 
            <category>Opportunities</category>
            <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
            List of opportunities
            </returns>
            <path>api/2.0/crm/opportunity</path>
            <httpMethod>PUT</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchDeals(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{ASC.CRM.Core.DealMilestoneStatus},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Deletes a list of all the opportunities matching the parameters specified in the request.
            </summary>
            <param type="System.Guid, System" optional="true" name="responsibleid">Opportunity responsible ID</param>
            <param type="System.Int32, System" optional="true" name="opportunityStagesid">Opportunity stage ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Opportunity tags</param>
            <param type="System.Int32, System" optional="true" name="contactid">Contact ID</param>
            <param type="System.Nullable{ASC.CRM.Core.DealMilestoneStatus}, System" optional="true" name="stageType" remark="Allowed values: 0 (Open), 1 (ClosedAndWon), 2 (ClosedAndLost)">Opportunity stage type</param>
            <param type="System.Nullable{System.Boolean}, System" optional="true" name="contactAlsoIsParticipant">Participation status: take into account opportunities where the contact is a participant or not</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="fromDate">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="toDate">End date</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete filtered opportunities</short> 
            <category>Opportunities</category>
            <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
            List of opportunities
            </returns>
            <path>api/2.0/crm/opportunity/filter</path>
            <httpMethod>DELETE</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDeals(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{ASC.CRM.Core.DealMilestoneStatus},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of all the opportunities matching the parameters specified in the request.
            </summary>
            <param type="System.Guid, System" method="url" optional="true" name="responsibleid">Opportunity responsible ID</param>
            <param type="System.Int32, System" method="url" optional="true" name="opportunityStagesid">Opportunity stage ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" method="url" optional="true" name="tags">Opportunity tags</param>
            <param type="System.Int32, System" method="url" optional="true" name="contactid">Contact ID</param>
            <param type="System.Nullable{ASC.CRM.Core.DealMilestoneStatus}, System" method="url" optional="true" name="stageType" remark="Allowed values: 0 (Open), 1 (ClosedAndWon), 2 (ClosedAndLost)">Opportunity stage type</param>
            <param type="System.Nullable{System.Boolean}, System" method="url" optional="true" name="contactAlsoIsParticipant">Participation status: take into account opportunities where the contact is a participant or not</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" optional="true" name="fromDate">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" optional="true" name="toDate">End date</param>
            <short>Get filtered opportunities</short> 
            <category>Opportunities</category>
            <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
            List of opportunities
            </returns>
            <path>api/2.0/crm/opportunity/filter</path>
            <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteDeal(System.Int32)">
             <summary>
             Deletes an opportunity with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
             <short>Delete an opportunity</short> 
             <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
             Opportunity
             </returns>
             <path>api/2.0/crm/opportunity/{opportunityid}</path>
             <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateDeal(System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String,System.Guid,ASC.CRM.Core.BidType,System.Decimal,System.String,System.Int32,System.Int32,System.Int32,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
             <summary>
             Creates an opportunity with the parameters specified in the request.
             </summary>
             <short>Create an opportunity</short> 
             <param type="System.Int32, System" name="contactid">Opportunity primary contact ID</param>
             <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" optional="true" name="members">Opportunity participants</param>
             <param type="System.String, System" name="title">Opportunity title</param>
             <param type="System.String, System" optional="true" name="description">Opportunity description</param>
             <param type="System.Guid, System" name="responsibleid">Opportunity responsible ID</param>
             <param type="ASC.CRM.Core.BidType, ASC.CRM.Core" name="bidType" remark="Allowed values: FixedBid, PerHour, PerDay,PerWeek, PerMonth, PerYear">Bid type</param>
             <param type="System.Decimal, System" optional="true" name="bidValue">Amount of transactions</param>
             <param type="System.String, System" name="bidCurrencyAbbr" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by API">Currency (abbreviation)</param>
             <param type="System.Int32, System" name="perPeriodValue">Amount per period</param>
             <param type="System.Int32, System" name="stageid">Stage ID</param>
             <param type="System.Int32, System" optional="true" name="successProbability">Opportunity success probability</param>
             <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="actualCloseDate">Actual opportunity closure date</param>
             <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="expectedCloseDate">Expected opportunity closure date</param>
             <param type="System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32, System.String}}" optional="true" name="customFieldList">Custom field list</param>
             <param type="System.Boolean, System" name="isPrivate">Opportunity privacy: private or not</param>
             <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" optional="true" name="accessList">List of users with access rights to the opportunity</param>
             <param type="System.Boolean, System" name="isNotify" optional="true">Notifies users from the access list about the opportunity or not</param>
             <category>Opportunities</category>
             <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
             Opportunity
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/opportunity</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateDeal(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String,System.Guid,ASC.CRM.Core.BidType,System.Decimal,System.String,System.Int32,System.Int32,System.Int32,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
             <summary>
             Updates the selected opportunity with the parameters specified in the request.
             </summary>
             <short>Update an opportunity</short>
             <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
             <param type="System.Int32, System" name="contactid">New opportunity primary contact ID</param>
             <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" optional="true" name="members">New opportunity participants</param>
             <param type="System.String, System" name="title">New opportunity title</param>
             <param type="System.String, System" optional="true" name="description">New opportunity description</param>
             <param type="System.Guid, System" name="responsibleid">New opportunity responsible ID</param>
             <param type="ASC.CRM.Core.BidType, ASC.CRM.Core" name="bidType" remark="Allowed values: FixedBid, PerHour, PerDay, PerWeek, PerMonth, PerYear">New bid type</param>
             <param type="System.Decimal, System" optional="true" name="bidValue">New amount of transactions</param>
             <param type="System.String, System" optional="true" name="bidCurrencyAbbr" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by API">New currency (abbreviation)</param>
             <param type="System.Int32, System" name="perPeriodValue">New amount per period</param>
             <param type="System.Int32, System" name="stageid">New stage ID</param>
             <param type="System.Int32, System" optional="true" name="successProbability">New opportunity success probability</param>
             <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="actualCloseDate">New actual opportunity closure date</param>
             <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="expectedCloseDate">New expected opportunity closure date</param>
             <param type="System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32, System.String}}" optional="true" name="customFieldList">New custom field list</param>
             <param type="System.Boolean, System" name="isPrivate">New opportunity privacy: private or not</param>
             <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" optional="true" name="accessList">New list of users with access rights to the opportunity</param>
             <param type="System.Boolean, System" name="isNotify" optional="true">Notifies users from the access list about the opportunity or not</param>
             <category>Opportunities</category>
             <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
             Updated opportunity
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/opportunity/{opportunityid}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealMembers(System.Int32)">
             <summary>
             Returns a list of all the contacts related to the opportunity with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
             <short>Get opportunity contacts</short> 
             <category>Opportunities</category>
             <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">List of contacts</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/opportunity/{opportunityid}/contact</path>
            <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddMemberToDeal(System.Int32,System.Int32)">
            <summary>
            Adds the selected contact to the opportunity with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <short>Add an opportunity contact</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Contact
            </returns>
            <path>api/2.0/crm/opportunity/{opportunityid}/contact/{contactid}</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteMemberFromDeal(System.Int32,System.Int32)">
            <summary>
            Deletes the selected contact from the opportunity with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="opportunityid">Opportunity ID</param>
            <param type="System.Int32, System" method="url" name="contactid">Contact ID</param>
            <short>Delete an opportunity contact</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM">
            Contact
            </returns>
            <path>api/2.0/crm/opportunity/{opportunityid}/contact/{contactid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealsByPrefix(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns a list of 30 opportunities in the CRM module with a prefix specified in the request.
            </summary>
            <param type="System.String, System" optional="true" name="prefix">Opportunity prefix</param>
            <param type="System.Int32, System" optional="true" name="contactID">Contact ID</param>
            <param type="System.Boolean, System" optional="true" name="internalSearch">Internal search or not</param>
            <category>Opportunities</category>
            <returns>
            List of opportunities
            </returns>
            <path>api/2.0/crm/opportunity/byprefix</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDeals(System.Int32)">
            <summary>
            Returns a list of all the opportunities for the contact with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" optional="true" name="contactid">Contact ID</param>
            <short>Get contact opportunities</short> 
            <category>Opportunities</category>
            <returns type="ASC.Api.CRM.Wrappers.OpportunityWrapper, ASC.Api.CRM">
            List of opportunities
            </returns>
            <path>api/2.0/crm/opportunity/bycontact/{contactid}</path>
            <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetDealCreationDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
            Sets the opportunity creation date specified in the request.
            </summary>
            <param type="System.Int32, System" optional="true" name="opportunityid">Opportunity ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="creationDate">Opportunity creation date</param>
            <short>Set the opportunity creation date</short> 
            <category>Opportunities</category>
            <path>api/2.0/crm/opportunity/{opportunityid}/creationdate</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetDealLastModifedDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
            Sets the opportunity last modified date specified in the request.
            </summary>
            <param type="System.Int32, System" optional="true" name="opportunityid">Opportunity ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="lastModifedDate">Opportunity last modified date</param>
            <short>Set the opportunity last modified date</short> 
            <category>Opportunities</category>
            <path>api/2.0/crm/opportunity/{opportunityid}/lastmodifeddate</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateDealMilestone(System.String,System.String,System.String,System.Int32,ASC.CRM.Core.DealMilestoneStatus)">
            <summary>
            Creates an opportunity stage with the parameters (title, description, success probability, etc.) specified in the request.
            </summary>
            <param type="System.String, System" name="title">Stage title</param>
            <param type="System.String, System" name="description">Stage description</param>
            <param type="System.String, System" name="color">Stage color</param>
            <param type="System.Int32, System" name="successProbability">Stage success probability</param>
            <param type="ASC.CRM.Core.DealMilestoneStatus, ASC.CRM.Core" name="stageType" remark="Allowed values: 0 (Open), 1 (ClosedAndWon), 2 (ClosedAndLost)">Stage type</param>
            <short>Create an opportunity stage</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Opportunity stage
            </returns>
            <path>api/2.0/crm/opportunity/stage</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateDealMilestone(System.Int32,System.String,System.String,System.String,System.Int32,ASC.CRM.Core.DealMilestoneStatus)">
            <summary>
            Updates the selected opportunity stage with the parameters (title, description, success probability, etc.) specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Opportunity stage ID</param>
            <param type="System.String, System" name="title">New stage title</param>
            <param type="System.String, System" name="description">New stage description</param>
            <param type="System.String, System" name="color">New stage color</param>
            <param type="System.Int32, System" name="successProbability">New stage success probability</param>
            <param type="ASC.CRM.Core.DealMilestoneStatus, ASC.CRM.Core" name="stageType" remark="Allowed values: Open, ClosedAndWon, ClosedAndLost">New stage type</param>
            <short>Update an opportunity stage</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.DealMilestoneWrapper, ASC.Api.CRM">
            Updated opportunity stage
            </returns>
            <path>api/2.0/crm/opportunity/stage/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateDealMilestoneColor(System.Int32,System.String)">
            <summary>
            Updates the selected opportunity stage with a color specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Opportunity stage ID</param>
            <param type="System.String, System" name="color">New stage color</param>
            <short>Update an opportunity stage color</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.DealMilestoneWrapper, ASC.Api.CRM">
            Opportunity stage with the updated color
            </returns>
            <path>api/2.0/crm/opportunity/stage/{id}/color</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateDealMilestonesOrder(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Updates the available order of opportunity stages with a list specified in the request.
            </summary>
            <short>
            Update the order of opportunity stages
            </short>
            <param type="System.Collections.Generic.IEnumerable{Systme.Int32}, System.Collections.Generic" name="ids">List of opportunity stage IDs</param>
            <category>Opportunities</category>
            <returns type="ASC.Api.CRM.Wrappers.DealMilestoneWrapper, ASC.Api.CRM">
            Opportunity stages in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/opportunity/stage/reorder</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteDealMilestone(System.Int32)">
            <summary>
            Deletes an opportunity stage with the ID specified in the request.
            </summary>
            <short>Delete an opportunity stage</short> 
            <category>Opportunities</category>
            <param type="System.Int32, System" method="url" name="id">Opportunity stage ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.DealMilestoneWrapper, ASC.Api.CRM">
            Opportunity stage
            </returns>
            <path>api/2.0/crm/opportunity/stage/{id}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateHistoryCategory(System.String,System.String,System.String,System.Int32)">
             <summary>
             Creates a new history category with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param type="System.String, System" name="title">History category title</param>
            <param type="System.String, System" name="description">History category description</param>
            <param type="System.String, System" name="imageName">Image name of the history category</param>
            <param type="System.Int32, System" name="sortOrder">History category order</param>
            <short>Create a history category</short> 
             <category>History</category>
            <returns type="ASC.Api.CRM.Wrappers.HistoryCategoryWrapper, ASC.Api.CRM">History category</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/history/category</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateHistoryCategory(System.Int32,System.String,System.String,System.String,System.Int32)">
             <summary>
             Updates the selected history category with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param type="System.Int32, System" method="url" name="id">History category ID</param>
            <param type="System.String, System" name="title">New history category title</param>
            <param type="System.String, System" name="description">New history category description</param>
            <param type="System.String, System" name="imageName">New image name of the history category </param>
            <param type="System.Int32, System" name="sortOrder">New history category order</param>
            <short>Update a history category</short> 
            <category>History</category>
            <returns type="ASC.Api.CRM.Wrappers.HistoryCategoryWrapper, ASC.Api.CRM">Updated history category</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/history/category/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateHistoryCategoryIcon(System.Int32,System.String)">
            <summary>
            Updates an icon of a history category with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">History category ID</param>
            <param type="System.String, System" name="imageName">New image name of the history category</param>
            <short>Update a history category icon</short> 
            <category>History</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.HistoryCategoryWrapper, ASC.Api.CRM">
            History category with the updated icon
            </returns>
            <path>api/2.0/crm/history/category/{id}/icon</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateHistoryCategoriesOrder(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the order of the history categories with a list specified in the request.
            </summary>
            <short>
            Update the order of history categories
            </short>
            <param type="System.Collections.Generic.IEnumerable{Systme.String}, System.Collections.Generic" name="titles">List of history category titles</param>
            <category>History</category>
            <returns type="ASC.Api.CRM.Wrappers.HistoryCategoryWrapper, ASC.Api.CRM">
            History categories in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/history/category/reorder</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteHistoryCategory(System.Int32)">
            <summary>
            Deletes a history category with the ID specified in the request.
            </summary>
            <short>Delete a history category</short> 
            <category>History</category>
            <param type="System.Int32, System" method="url" name="id">History category ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.HistoryCategoryWrapper, ASC.Api.CRM">History category</returns>
            <path>api/2.0/crm/history/category/{id}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTaskCategory(System.String,System.String,System.String,System.Int32)">
             <summary>
             Creates a new task category with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param type="System.String, System" name="title">Task category title</param>
            <param type="System.String, System" name="description">Task category description</param>
            <param type="System.String, System" name="imageName">Image name of task category</param>
            <param type="System.Int32, System" name="sortOrder">Task category order</param>
            <short>Create a task category</short> 
            <category>Tasks</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.TaskCategoryWrapper, ASC.Api.CRM">Task category</returns>
            <path>api/2.0/crm/task/category</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskCategory(System.Int32,System.String,System.String,System.String,System.Int32)">
             <summary>
             Updates the selected task category with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param type="System.Int32, System" method="url" name="id">Task category ID</param>
            <param type="System.String, System" name="title">New task category title</param>
            <param type="System.String, System" name="description">New task category description</param>
            <param type="System.String, System" name="imageName">New image name of task category</param>
            <param type="System.Int32, System" name="sortOrder">New task category order</param>
            <short>Update a task category</short> 
            <category>Tasks</category>
            <returns type="ASC.Api.CRM.Wrappers.TaskCategoryWrapper, ASC.Api.CRM">Updated task category</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/task/category/{id}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskCategoryIcon(System.Int32,System.String)">
            <summary>
            Updates an icon of the task category with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Task category ID</param>
            <param type="System.String, System" name="imageName">New icon name of task category</param>
            <short>Update a task category icon</short> 
            <category>Tasks</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.TaskCategoryWrapper, ASC.Api.CRM">
            Task category with the updated icon
            </returns>
            <path>api/2.0/crm/task/category/{id}/icon</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskCategoriesOrder(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the order of the task categories with a list specified in the request.
            </summary>
            <short>
            Update the order of task categories
            </short>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" name="titles">List of task category titles</param>
            <category>Tasks</category>
            <returns type="ASC.Api.CRM.Wrappers.TaskCategoryWrapper, ASC.Api.CRM">
            Task categories in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/task/category/reorder</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTaskCategory(System.Int32,System.Int32)">
             <summary>
             Deletes a task category with the ID specified in the request.
             </summary>
             <short>Delete a task category</short> 
             <category>Tasks</category>
             <param type="System.Int32, System" method="url" name="categoryid">Task category ID</param>
             <param type="System.Int32, System" name="newcategoryid">Task category ID to replace the deleted category in the tasks with the current task category</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/task/category/{categoryid}</path>
            <httpMethod>DELETE</httpMethod>
            <returns type="ASC.Api.CRM.Wrappers.TaskCategoryWrapper, ASC.Api.CRM">Task category</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateContactStatus(System.String,System.String,System.String,System.Int32)">
             <summary>
             Creates a new contact status with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param type="System.String, System" name="title">Contact status title</param>
            <param type="System.String, System" name="description">Contact status description</param>
            <param type="System.String, System" name="color">Contact status color</param>
            <param type="System.Int32, System" name="sortOrder">Contact status sort order</param>
             <short>Create a contact status</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.ContactStatusWrapper, ASC.Api.CRM">Contact status</returns>
             <path>api/2.0/crm/contact/status</path>
             <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactStatus(System.Int32,System.String,System.String,System.String,System.Int32)">
             <summary>
             Updates the selected contact status with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param type="System.Int32, System" method="url" name="id">Contact status ID</param>
            <param type="System.String, System" name="title">New contact status title</param>
            <param type="System.String, System" name="description">New contact status description</param>
            <param type="System.String, System" name="color">New contact status color</param>
            <param type="System.Int32, System" name="sortOrder">New contact status sort order</param>
            <returns>Updated contact status</returns>
             <short>Update a contact status</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <exception cref="T:System.Security.SecurityException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.ContactStatusWrapper, ASC.Api.CRM">Contact status</returns>
             <path>api/2.0/crm/contact/status/{id}</path>
             <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactStatusColor(System.Int32,System.String)">
            <summary>
            Updates a color of the selected contact status with a new color specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="id">Contact status ID</param>
            <param type="System.String, System" name="color">New contact status color</param>
            <short>Update a contact status color</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.ContactStatusWrapper, ASC.Api.CRM">
            Contact status with a new color
            </returns>
            <path>api/2.0/crm/contact/status/{id}/color</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactStatusesOrder(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the order of the contact statuses with a list specified in the request.
            </summary>
            <short>
            Update the order of contact statuses
            </short>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" name="titles">List of contact status titles</param>
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactStatusWrapper, ASC.Api.CRM">
            Contact statuses in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/contact/status/reorder</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactStatus(System.Int32)">
             <summary>
             Deletes a contact status with the ID specified in the request.
             </summary>
             <short>Delete a contact status</short> 
             <category>Contacts</category>
             <param type="System.Int32, System" method="url" name="contactStatusid">Contact status ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.ContactStatusWrapper, ASC.Api.CRM">
             Contact status
             </returns>
             <path>api/2.0/crm/contact/status/{contactStatusid}</path>
             <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactStatusByID(System.Int32)">
             <summary>
             Returns a contact status with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="contactStatusid">Contact status ID</param>
             <returns type="ASC.Api.CRM.Wrappers.ContactStatusWrapper, ASC.Api.CRM">Contact status</returns>
             <short>Get a contact status</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/contact/status/{contactStatusid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateContactType(System.String,System.Int32)">
             <summary>
             Creates a new contact type with the parameters specified in the request.
             </summary>
            <param type="System.String, System" name="title">Contact type title</param>
            <param type="System.Int32, System" name="sortOrder">Contact type sort order</param>
             <short>Create a contact type</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.ContactTypeWrapper, ASC.Api.CRM">Contact type</returns>
             <path>api/2.0/crm/contact/type</path>
             <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactType(System.Int32,System.String,System.Int32)">
             <summary>
             Updates the selected contact type with the parameters specified in the request.
             </summary>
            <param type="System.Int32, System" method="url" name="id">Contact type ID</param>
            <param type="System.String, System" name="title">New contact type title</param>
            <param type="System.Int32, System" name="sortOrder">New contact type order</param>
            <returns>Updated contact type</returns>
             <short>Update a contact type</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <exception cref="T:System.Security.SecurityException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.ContactTypeWrapper, ASC.Api.CRM">Contact type</returns>
             <path>api/2.0/crm/contact/type/{id}</path>
             <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactTypesOrder(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the order of the contact types with a list specified in the request.
            </summary>
            <short>
            Update the order of contact types
            </short>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" name="titles">List of contact type titles</param>
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactTypeWrapper, ASC.Api.CRM">
            Contact types in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/contact/type/reorder</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactType(System.Int32)">
             <summary>
             Deletes a contact type with the ID specified in the request.
             </summary>
             <short>Delete a contact type</short> 
             <category>Contacts</category>
             <param type="System.Int32, System" method="url" name="contactTypeid">Contact type ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
             <returns type="ASC.Api.CRM.Wrappers.ContactTypeWrapper, ASC.Api.CRM">
             Contact type
             </returns>
             <path>api/2.0/crm/contact/type/{contactTypeid}</path>
             <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactTypeByID(System.Int32)">
             <summary>
             Returns a contact type with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="contactTypeid">Contact type ID</param>
             <returns type="ASC.Api.CRM.Wrappers.ContactTypeWrapper, ASC.Api.CRM">Contact type</returns>
             <short>Get a contact type</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/contact/type/{contactTypeid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealMilestoneByID(System.Int32)">
             <summary>
             Returns an opportunity stage with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="stageid">Opportunity stage ID</param>
             <returns type="ASC.Api.CRM.Wrappers.DealMilestoneWrapper, ASC.Api.CRM">Opportunity stage</returns>
             <short>Get an opportunity stage</short> 
             <category>Opportunities</category>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/opportunity/stage/{stageid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskCategoryByID(System.Int32)">
             <summary>
             Returns a task category with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="categoryid">Task category ID</param>
             <returns type="ASC.Api.CRM.Wrappers.TaskCategoryWrapper, ASC.Api.CRM">Task category</returns>
             <short>Get a task category</short> 
             <category>Tasks</category>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/task/category/{categoryid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetHistoryCategoryWrapper">
            <summary>
            Returns a list of all the history categories available on the portal.
            </summary>
            <short>Get history categories</short> 
            <category>History</category>
            <returns type="ASC.Api.CRM.Wrappers.HistoryCategoryWrapper, ASC.Api.CRM">
            List of all the history categories
            </returns>
            <path>api/2.0/crm/history/category</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskCategories">
            <summary>
            Returns a list of all the task categories available on the portal.
            </summary>
            <short>Get task categories</short> 
            <category>Tasks</category>
            <returns type="ASC.Api.CRM.Wrappers.TaskCategoryWrapper, ASC.Api.CRM">
            List of all the task categories
            </returns>
            <path>api/2.0/crm/task/category</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactStatuses">
             <summary>
             Returns a list of all the contact statuses available on the portal.
             </summary>
             <short>Get contact statuses</short> 
             <category>Contacts</category>
             <returns type="ASC.Api.CRM.Wrappers.ContactStatusWrapper, ASC.Api.CRM">
            List of all the contact statuses
             </returns>
             <path>api/2.0/crm/contact/status</path>
             <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactTypes">
            <summary>
            Returns a list of all the contact types available on the portal.
            </summary>
            <short>Get contact types</short> 
            <category>Contacts</category>
            <returns type="ASC.Api.CRM.Wrappers.ContactTypeWrapper, ASC.Api.CRM">
            List of all the contact types
            </returns>
            <path>api/2.0/crm/contact/type</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealMilestones">
            <summary>
            Returns a list of all the opportunity stages available on the portal.
            </summary>
            <short>Get opportunity stages</short> 
            <category>Opportunities</category>
            <returns type="ASC.Api.CRM.Wrappers.DealMilestoneWrapper, ASC.Api.CRM">
            List of all the opportunity stages
            </returns>
            <path>api/2.0/crm/opportunity/stage</path>
            <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetHistory(System.String,System.Int32,System.Int32,System.Guid,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of all the events matching the parameters specified in the request.
            </summary>
            <short>
            Get filtered events
            </short>
            <category>History</category>
            <param type="System.String, System" method="url" optional="true" name="entityType" remark="Allowed values: opportunity, contact, or case">Related entity type</param>
            <param type="System.Int32, System" method="url" optional="true" name="entityId">Related entity ID</param>
            <param type="System.Int32, System" method="url" optional="true" name="categoryId">Event category ID</param>
            <param type="System.Guid, System" method="url" optional="true" name="createBy">Event author</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" optional="true" name="fromDate">Earliest event due date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" optional="true" name="toDate">Latest event due date</param>
            <returns type="ASC.Api.CRM.Wrappers.RelationshipEventWrapper, ASC.Api.CRM">
            Event list
            </returns>
            <path>api/2.0/crm/history/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteHistory(System.Int32)">
            <summary>
            Deletes an event with the ID specified in the request and all the files associated with this event.
            </summary>
            <short>
            Delete an event
            </short>
            <category>History</category>
            <param type="System.Int32, System" method="url" name="id">Event ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.RelationshipEventWrapper, ASC.Api.CRM">
            Event
            </returns>
            <path>api/2.0/crm/history/{id}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTextFile(System.String,System.Int32,System.String,System.String)">
            <summary>
            Creates a text (.txt) file in the selected folder with the title and contents specified in the request.
            </summary>
            <short>Create a text file</short>
            <category>Files</category>
            <param type="System.String, System" method="url" optional = "true" name="entityType" remark="Allowed values: opportunity, contact, or case">Related entity type</param>
            <param type="System.Int32, System" method="url" optional="true" name="entityid">Related entity ID</param>
            <param type="System.String, System" name="title">File title</param>
            <param type="System.String, System" name="content">File contents</param>
            <returns type="ASC.Api.Documents.FileWrapper, ASC.Api.Documents">
            File information
            </returns>
            <path>api/2.0/crm/{entityType}/{entityid}/files/text</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UploadFileInCRM(System.String,System.Int32,System.IO.Stream,System.Net.Mime.ContentType,System.Net.Mime.ContentDisposition,System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase},System.Boolean)">
            <summary>
            Uploads a file to the CRM module with the parameters specified in the request.
            </summary>
            <short>Upload a file</short>
            <category>Files</category>
            <remarks>
            <![CDATA[
             Upload can be done in 2 different ways:
             <ol>
            <li>Single file upload. You should set the Content-Type &amp; Content-Disposition headers to specify file name and content type, and send a file in the request body.</li>
            <li>Using standart multipart/form-data method.</li>
            </ol>]]>
            </remarks>
            <param type="System.String, System" method="url" optional="true" name="entityType" remark="Allowed values: opportunity, contact, or case">Related entity type</param>
            <param type="System.Int32, System" method="url" optional="true" name="entityid">Related entity ID</param>
            <param type="System.IO.Stream, System.IO" name="file" visible="false">Request input stream</param>
            <param type="System.Net.Mime.ContentType, System.Net.Mime" name="contentType" visible="false">Content-Type header</param>
            <param type="System.Net.Mime.ContentDisposition, System.Net.Mime" name="contentDisposition" visible="false">Content-Disposition header</param>
            <param type="System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase}, System.Collections.Generic" name="files" visible="false">List of files when posted as multipart/form-data</param>
            <param type="System.Boolean, System" name="storeOriginalFileFlag" visible="false">Defines if the documents in the original formats are also stored or not</param>
            <returns type="ASC.Api.Documents.FileWrapper, ASC.Api.Documents">
            File information
            </returns>
            <path>api/2.0/crm/{entityType}/{entityid}/files/upload</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddHistoryTo(System.String,System.Int32,System.Int32,System.String,System.Int32,ASC.Specific.ApiDateTime,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Creates an event with the parameters specified in the request.
            </summary>
            <short>
            Create an event
            </short>
            <category>History</category>
            <param type="System.String, System" optional="true" name="entityType" remark="Allowed values: opportunity or case">Related entity type</param>
            <param type="System.Int32, System" optional="true" name="entityId">Related entity ID</param>
            <param type="System.Int32, System" optional="true" name="contactId">Contact ID</param>
            <remarks>
            <![CDATA[
             You must set a value for 'contactId' if 'entityId' is not set, or a values for the 'entityId' and 'entityType' parameters if 'contactId' is not set.
            ]]>
            </remarks>
            <param type="System.String, System" optional="false" name="content">Event contents</param>
            <param type="System.Int32, System" optional="false" name="categoryId">Event category ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="created">Event creation date</param>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" optional="true" name="fileId">List of file IDs for the current event</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" optional="true" name="notifyUserList">List of users who will be notified about the event</param>
            <returns type="ASC.Api.CRM.Wrappers.RelationshipEventWrapper, ASC.Api.CRM">
            Created event
            </returns>
            <path>api/2.0/crm/history</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AttachFiles(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Attaches the selected file(s) to the entity specified in the request.
            </summary>
            <short>
            Attach files to the entity
            </short>
            <param type="System.String, System" method="url" name="entityType">Entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Entity ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic" name="fileids">List of file IDs</param>
            <category>Files</category>
            <returns type="ASC.Api.CRM.Wrappers.RelationshipEventWrapper, ASC.Api.CRM">Entity with the file(s) attached</returns>
            <path>api/2.0/crm/{entityType}/{entityid}/files</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetRootFolderID">
            <summary>
            Returns the ID of the root folder used to store the CRM module files.
            </summary>
            <short>Get root folder ID</short> 
            <category>Files</category>
            <returns>
            Root folder ID
            </returns>
            <path>api/2.0/crm/files/root</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetFiles(System.String,System.Int32)">
            <summary>
            Returns a list of all the files for the entity with the ID and type specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="entityType">Entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Entity ID</param>
            <short>Get entity files</short> 
            <category>Files</category>
            <returns type="ASC.Api.Documents.FileWrapper, ASC.Api.Documents">
            List of files
            </returns>
            <path>api/2.0/crm/{entityType}/{entityid}/files</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteCRMFile(System.Int32)">
            <summary>
            Deletes a file with the ID specified in the request.
            </summary>
            <short>Delete a file</short> 
            <category>Files</category>
            <param type="System.Int32, System" method="url" name="fileid">File ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.Documents.FileWrapper, ASC.Api.Documents">
            File information
            </returns>
            <path>api/2.0/crm/files/{fileid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetFiles">
            <summary>Returns a list of all the user report files.</summary>
            <short>Get report files</short>
            <category>Reports</category>
            <returns type="ASC.Api.Documents.FileWrapper, ASC.Api.Documents">Report files</returns>
            <exception cref="T:System.Security.SecurityException">If the user can't create reports</exception>
            <path>api/2.0/crm/report/files</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteFile(System.Int32)">
            <summary>Deletes a report file with the ID specified in the request.</summary>
            <param type="System.Int32, System" method="url" name="fileid">File ID</param>
            <short>Delete a report file</short>
            <category>Reports</category>
            <returns></returns>
            <exception cref="T:System.Security.SecurityException">If the user can't create reports</exception>
            <exception cref="T:System.ArgumentException">If file ID is less than 0</exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException">If file is not found</exception>
            <path>api/2.0/crm/report/file/{fileid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetStatus">
            <summary>Returns a status of the report generation task.</summary>
            <short>Get the report generation status</short>
            <category>Reports</category>
            <returns type="ASC.Web.Files.Services.DocumentService.ReportState, ASC.Web.Files">Report status</returns>
            <exception cref="T:System.Security.SecurityException">If the user can't create reports</exception>
            <path>api/2.0/crm/report/status</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.Terminate">
            <summary>Terminates the report generation task.</summary>
            <short>Terminate the report generation</short>
            <category>Reports</category>
            <returns></returns>
            <exception cref="T:System.Security.SecurityException">If the user can't create reports</exception>
            <path>api/2.0/crm/report/terminate</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CheckReportData(ASC.CRM.Core.ReportType,ASC.CRM.Core.ReportTimePeriod,System.Guid[])">
            <summary>Checks the report data for the parameters specified in the request.</summary>
            <param type="ASC.CRM.Core.ReportType, ASC.CRM.Core" name="type">Report type</param>
            <param type="ASC.CRM.Core.ReportTimePeriod, ASC.CRM.Core" name="timePeriod">Report time period</param>
            <param type="System.Guid[], System" name="managers">Managers</param>
            <short>Check report data</short>
            <category>Reports</category>
            <returns>Report information</returns>
            <path>api/2.0/crm/report/check</path>
            <httpMethod>POST</httpMethod>
            <exception cref="T:System.Security.SecurityException">If the user can't create reports</exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GenerateReport(ASC.CRM.Core.ReportType,ASC.CRM.Core.ReportTimePeriod,System.Guid[])">
            <summary>Runs the report generation task with the parameters specified in the request.</summary>
            <param type="ASC.CRM.Core.ReportType, ASC.CRM.Core" name="type">Report type</param>
            <param type="ASC.CRM.Core.ReportTimePeriod, ASC.CRM.Core" name="timePeriod">Report time period</param>
            <param type="System.Guid[], System" name="managers">Managers</param>
            <short>Generate a report</short>
            <category>Reports</category>
            <returns type="ASC.Web.Files.Services.DocumentService.ReportState, ASC.Web.Files">Report status</returns>
            <exception cref="T:System.Security.SecurityException">If the user can't create reports</exception>
            <path>api/2.0/crm/report/generate</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetEntityTags(System.String,System.Int32)">
             <summary>
              Returns a list of all the tags related to the entity with the ID and type specified in the request.
             </summary>
             <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
             <param type="System.Int32, System" method="url" name="entityid">Entity ID</param>
             <short>Get entity tags</short> 
             <category>Tags</category>
             <returns>
             Tag
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/{entityType}/tag/{entityid}</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactTags(System.Int32)">
             <summary>
             Returns a list of all the tags for the contact with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" name="contactid">Contact ID</param>
             <short>Get contact tags</short> 
             <category>Tags</category>
             <returns>
             List of contact tags
             </returns>
             <path>api/2.0/crm/contact/{contactid}/tag</path>
             <httpMethod>GET</httpMethod>
            <exception cref="T:System.ArgumentException"></exception>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTag(System.String,System.String)">
             <summary>
              Creates a tag for the selected entity with a tag name specified in the request.
             </summary>
             <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
             <param type="System.String, System" name="tagName">Tag name</param>
             <short>Create a tag</short> 
             <category>Tags</category>
             <returns>
             Tag
             </returns>
             <path>api/2.0/crm/{entityType}/tag</path>
             <httpMethod>POST</httpMethod>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetAllTags(System.String)">
             <summary>
              Returns a list of all the tags associated with the entity type specified in the request.
             </summary>
             <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
             <short>Get entity type tags</short>
             <category>Tags</category>
             <returns type="ASC.Api.CRM.Wrappers.TagWrapper, ASC.Api.CRM">
             Tag
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/{entityType}/tag</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagToBatch(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Adds a tag to the entities with the IDs specified in the request.
            </summary>
            <short>Add a tag to the entities</short> 
            <category>Tags</category>
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
            <param type="System.Collections.Generic.IEnumerable{System.Int32}, System.Collections.Generic"  name="entityid">List of entity IDs</param>
            <param type="System.String, System" name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
            <path>api/2.0/crm/{entityType}/taglist</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagToBatchContacts(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,ASC.CRM.Core.ContactListViewType,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String)">
            <summary>
            Adds the selected tag to the group of contacts with the parameters specified in the request.
            </summary>
            <short>Add a tag to contacts</short> 
            <category>Tags</category>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Contact tags</param>
            <param type="System.Int32, System" optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param type="System.Int32, System" optional="true" name="contactType">Contact type ID</param>
            <param type="ASC.CRM.Core.ContactListViewType, ASC.CRM.Core" optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="fromDate">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="toDate">End date</param>
            <param type="System.String, System" name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
            <path>api/2.0/crm/contact/filter/taglist</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagToBatchDeals(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{ASC.CRM.Core.DealMilestoneStatus},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String)">
            <summary>
            Adds the selected tag to the group of opportunities with the parameters specified in the request.
            </summary>
            <short>Add a tag to opportunities</short> 
            <category>Tags</category>
            <param type="System.Guid, System" optional="true" name="responsibleid">Opportunity responsible ID</param>
            <param type="System.Int32, System" optional="true" name="opportunityStagesid">Opportunity stage ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Opportunity tags</param>
            <param type="System.Int32, System" optional="true" name="contactid">Contact ID</param>
            <param type="System.Nullable{ASC.CRM.Core.DealMilestoneStatus}, System" optional="true" name="stageType" remark="Allowed values: {Open, ClosedAndWon, ClosedAndLost}">Opportunity stage type</param>
            <param type="System.Nullable{System.Boolean}, System" optional="true" name="contactAlsoIsParticipant">Participation status: take into account opportunities where the contact is a participant or not</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="fromDate">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" optional="true" name="toDate">End date</param>
            <param type="System.String, System" name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
            <path>api/2.0/crm/opportunity/filter/taglist</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagToBatchCases(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Adds the selected tag to the group of cases with the parameters specified in the request.
            </summary>
            <short>Add a tag to cases</short> 
            <category>Tags</category>
            <param type="System.Int32, System" optional="true" name="contactid">Contact ID</param>
            <param type="System.Nullable{System.Boolean}, System" optional="true" name="isClosed">Case status: closed or not</param>
            <param type="System.Collections.Generic.IEnumerable{System.String}, System.Collections.Generic" optional="true" name="tags">Case tags</param>
            <param type="System.String, System" name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
            <path>api/2.0/crm/case/filter/taglist</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteUnusedTag(System.String)">
            <summary>
            Deletes all the unused tags from the entities with the type specified in the request.
            </summary>
            <short>Delete unused tags</short> 
            <category>Tags</category>
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
            <returns>Tags</returns>
            <path>api/2.0/crm/{entityType}/tag/unused</path>
            <httpMethod>DELETE</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagTo(System.String,System.Int32,System.String)">
            <summary>
             Adds the selected tag to the entity with the type and ID specified in the request.
            </summary>
            <short>Add a tag to the entity</short> 
            <category>Tags</category>
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Entity ID</param>
            <param type="System.String, System" name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
            <path>api/2.0/crm/{entityType}/{entityid}/tag</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddContactTagToGroup(System.String,System.Int32,System.String)">
            <summary>
            Adds the selected tag to the entity (company or person) specified in the request and to all the related contacts.
            </summary>
            <short>Add a tag to the entity and related contacts</short> 
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: company, person">Entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Entity ID</param>
            <param type="System.String, System" name="tagName">Tag name</param>
            <category>Tags</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Exception"></exception>
            <returns>
            Tag
            </returns>
            <httpMethod>POST</httpMethod>
            <path>api/2.0/crm/{entityType}/{entityid}/tag/group</path>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTag(System.String,System.String)">
             <summary>
             Deletes the selected tag from the entities with the type specified in the request.
             </summary>
             <short>Delete a tag from entities</short> 
             <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
             <param type="System.String, System" name="tagName">Tag name</param>
             <category>Tags</category>
             <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <returns>
             Tag
             </returns>
             <path>api/2.0/crm/{entityType}/tag</path>
             <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTagFrom(System.String,System.Int32,System.String)">
            <summary>
             Deletes the selected tag from the entity with the type and ID specified in the request.
            </summary>
            <short>Delete an entity tag</short> 
            <category>Tags</category>
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Entity ID</param>
            <param type="System.String, System" name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
             Tag
            </returns> 
            <path>api/2.0/crm/{entityType}/{entityid}/tag</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactTagFromGroup(System.String,System.Int32,System.String)">
            <summary>
            Deletes the selected tag from the entity (company or person) specified in the request and from all the related contacts.
            </summary>
            <short>Delete a tag from the entity and related contacts</short> 
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: company, person">Entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Entity ID</param>
            <param type="System.String, System" name="tagName">Tag name</param>
            <category>Tags</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Exception"></exception>
            <returns>
             Tag
            </returns>
            <path>api/2.0/crm/{entityType}/{entityid}/tag/group</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskByID(System.Int32)">
             <summary>
             Returns the detailed information about a task with the ID specified in the request.
             </summary>
             <param type="System.Int32, System" method="url" name="taskid">Task ID</param>
             <returns type="ASC.Api.CRM.Wrappers.TaskWrapper, ASC.Api.CRM">Task</returns>
             <short>Get task by ID</short> 
             <category>Tasks</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/task/{taskid}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetAllTasks(System.Guid,System.Int32,System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String,System.Int32)">
            <summary>
            Returns a list of tasks matching the parameters specified in the request.
            </summary>
            <param type="System.Guid, System" method="url" optional="true" name="responsibleid">Task responsible ID</param>
            <param type="System.Int32, System" method="url" optional="true" name="categoryid">Task category ID</param>
            <param type="System.Nullable{System.Boolean}, System" method="url" optional="true" name="isClosed">Task status</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" optional="true" name="fromDate">Earliest task due date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" method="url" optional="true" name="toDate">Latest task due date</param>
            <param type="System.String, System" method="url" name="entityType" remark="Allowed values: opportunity, contact, or case">Related entity type</param>
            <param type="System.Int32, System" method="url" name="entityid">Related entity ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <short>Get tasks</short> 
            <category>Tasks</category>
            <returns type="ASC.Api.CRM.Wrappers.TaskWrapper, ASC.Api.CRM">
            List of all tasks
            </returns>
            <path>api/2.0/crm/task/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ReOpenTask(System.Int32)">
            <summary>
            Reopens a task with the ID specified in the request.
            </summary>
            <short>Reopen a task</short> 
            <category>Tasks</category>
            <param type="System.Int32, System" method="url" name="taskid">Task ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.TaskWrapper, ASC.Api.CRM">
            Task
            </returns>
            <path>api/2.0/crm/task/{taskid}/reopen</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CloseTask(System.Int32)">
            <summary>
            Closes a task with the ID specified in the request.
            </summary>
            <short>Close a task</short> 
            <category>Tasks</category>
            <param type="System.Int32, System" method="url" name="taskid">Task ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.TaskWrapper, ASC.Api.CRM">
            Task
            </returns>
            <path>api/2.0/crm/task/{taskid}/close</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTask(System.Int32)">
            <summary>
            Deletes a task with the ID specified in the request.
            </summary>
            <short>Delete a task</short> 
            <category>Tasks</category>
            <param type="System.Int32, System" method="url" name="taskid">Task ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns type="ASC.Api.CRM.Wrappers.TaskWrapper, ASC.Api.CRM">
             Deleted task
            </returns>
            <path>api/2.0/crm/task/{taskid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTask(System.String,System.String,ASC.Specific.ApiDateTime,System.Guid,System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
             Creates a task with the parameters (title, description, due date, etc.) specified in the request.
            </summary>
            <param type="System.String, System" name="title">Task title</param>
            <param type="System.String, System" optional="true"  name="description">Task description</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="deadline">Task due date</param>
            <param type="System.Guid System" name="responsibleId">Task responsible ID</param>
            <param type="System.Int32, System" name="categoryId">Task category ID</param>
            <param type="System.Int32, System" optional="true"  name="contactId">Contact ID</param>
            <param type="System.String, System" optional="true"  name="entityType" remark="Allowed values: opportunity or case">Related entity type</param>
            <param type="System.Int32, System" optional="true"  name="entityId">Related entity ID</param>
            <param type="System.Boolean, System" optional="true"  name="isNotify">Notifies the responsible about the task or not</param>
            <param type="System.Int32, System" optional="true"  name="alertValue">Time period in minutes to remind the responsible of the task</param>
            <exception cref="T:System.ArgumentException"></exception>
            <short>Create a task</short> 
            <category>Tasks</category>
            <returns type="ASC.Api.CRM.Wrappers.TaskWrapper, ASC.Api.CRM">Task</returns>
            <path>api/2.0/crm/task</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTaskGroup(System.String,System.String,ASC.Specific.ApiDateTime,System.Guid,System.Int32,System.Int32[],System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
             Creates a group of the same task with the parameters (title, description, due date, etc.) specified in the request for several contacts.
            </summary>
            <param type="System.String, System" name="title">Task title</param>
            <param type="System.String, System" optional="true"  name="description">Task description</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="deadline">Task due date</param>
            <param type="System.Guid, System" name="responsibleId">Task responsible ID</param>
            <param type="System.Int32, System" name="categoryId">Task category ID</param>
            <param type="System.Int32[], System" name="contactId">List of contact IDs</param>
            <param type="System.String, System" optional="true"  name="entityType" remark="Allowed values: opportunity or case">Related entity type</param>
            <param type="System.Int32, System" optional="true"  name="entityId">Related entity ID</param>
            <param type="System.Boolean, System" optional="true" name="isNotify">Notifies the responsible about the task or not</param>
            <param type="System.Int32, System" optional="true" name="alertValue">Time period in minutes to remind the responsible of the task</param>
            <exception cref="T:System.ArgumentException"></exception>
            <short>Create a task group</short> 
            <category>Tasks</category>
            <returns>Tasks</returns>
            <path>api/2.0/crm/contact/task/group</path>
            <httpMethod>POST</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTask(System.Int32,System.String,System.String,ASC.Specific.ApiDateTime,System.Guid,System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
             Updates the selected task with the parameters (title, description, due date, etc.) specified in the request.
            </summary>
            <param type="System.Int32, System" method="url" name="taskid">Task ID</param>
            <param type="System.String, System" name="title">New task title</param>
            <param type="System.String, System" name="description">New task description</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="deadline">New task due date</param>
            <param type="System.Guid, System" name="responsibleid">New task responsible ID</param>
            <param type="System.Int32, System" name="categoryid">New task category ID</param>
            <param type="System.Int32, System" name="contactid">New contact ID</param>
            <param type="System.String, System" name="entityType" remark="Allowed values: opportunity or case">New related entity type</param>
            <param type="System.Int32, System" name="entityid">New related entity ID</param>
            <param type="System.Boolean, System" name="isNotify">Notifies the responsible about the task or not</param>
            <param type="System.Int32, System" optional="true"  name="alertValue">New time period in minutes to remind the responsible of the task</param>
            <short>Update a task</short> 
            <category>Tasks</category>
            <returns type="ASC.Api.CRM.Wrappers.TaskWrapper, ASC.Api.CRM">Task</returns>
            <path>api/2.0/crm/task/{taskid}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetTaskCreationDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
             Sets the creation date to the task with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="taskId">Task ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="creationDate">Task creation date</param>
            <short>Set the task creation date</short> 
            <category>Tasks</category>
            <path>api/2.0/crm/task/{taskid}/creationdate</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetTaskLastModifedDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
             Sets the last modified date to the task with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="taskId">Task ID</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="lastModifedDate">Task last modified date</param>
            <short>Set the task last modified date</short> 
            <category>Tasks</category>
            <path>api/2.0/crm/task/{taskid}/lastmodifeddate</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTaskTemplateContainer(System.String,System.String)">
            <summary>
            Creates a new task template container with the type and title specified in the request.
            </summary>
            <param type="System.String, System" name="entityType">Entity type</param>
            <param type="System.String, System" name="title">Template container title</param>
            <short>Create a task template container</short> 
            <category>Task templates</category>
            <returns>
            Task template container
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/{entityType}/tasktemplatecontainer</path>
            <httpMethod>POST</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskTemplateContainers(System.String)">
            <summary>
            Returns a complete list of all the task template containers available on the portal.
            </summary>
            <param type="System.String, System" name="entityType">Entity type</param>
            <short>Get task template containers</short> 
            <category>Task templates</category>
            <returns>
            List of task template containers
            </returns>
            <path>api/2.0/crm/{entityType}/tasktemplatecontainer</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTaskTemplateContainer(System.Int32)">
            <summary>
            Deletes a task template container with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="containerid">Task template container ID</param>
            <short>Delete a task template container</short> 
            <category>Task templates</category>
            <returns>
            Deleted task template container
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/tasktemplatecontainer/{containerid}</path>
            <httpMethod>DELETE</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskTemplateContainer(System.Int32,System.String)">
            <summary>
            Updates a task template container with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="containerid">Task template container ID</param>
            <param type="System.String, System" name="title">New template container title</param>
            <short>Update a task template container</short> 
            <category>Task templates</category>
            <returns>
            Updated task template container
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/tasktemplatecontainer/{containerid}</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskTemplateContainerByID(System.Int32)">
            <summary>
            Returns the detailed information on the task template container with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="containerid">Task template container ID</param>
            <short>Get a task template container by ID</short> 
            <category>Task templates</category>
            <returns>
            Task template container
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/tasktemplatecontainer/{containerid}</path>
            <httpMethod>GET</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskTemplates(System.Int32)">
            <summary>
            Returns a list of all the tasks in the container with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="containerid">Task template container ID</param>
            <short>Get container tasks</short> 
            <category>Task templates</category>
            <returns>
            List of task templates
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/tasktemplatecontainer/{containerid}/tasktemplate</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTaskTemplate(System.Int32,System.String,System.String,System.Guid,System.Int32,System.Boolean,System.Int64,System.Boolean)">
            <summary>
            Creates a new task template with the parameters specified in the request in the container with the selected ID.
            </summary>
            <param type="System.Int32, System" name="containerid">Task template container ID</param>
            <param type="System.String, System" name="title">Task template title</param>
            <param type="System.String, System" name="description">Task template description</param>
            <param type="System.Guid, System" name="responsibleid">Task template responsible ID</param>
            <param type="System.Int32, System" name="categoryid">Task template category ID</param>
            <param type="System.Boolean, System" name="isNotify">Responsible notification: notifies or not</param>
            <param type="System.Int64, System" name="offsetTicks">Tick offset</param>
            <param type="System.Boolean, System" name="deadLineIsFixed">Defines if the deadline is fixed or not</param>
            <short>Create a task template</short> 
            <category>Task templates</category>
            <returns>Task template</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/tasktemplatecontainer/{containerid}/tasktemplate</path>
            <httpMethod>POST</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskTemplate(System.Int32,System.Int32,System.String,System.String,System.Guid,System.Int32,System.Boolean,System.Int64,System.Boolean)">
            <summary>
            Updates the selected task template with the parameters specified in the request.
            </summary>
            <param type="System.Int32, System" name="id">Task template ID</param>
            <param type="System.Int32, System" name="containerid">New task template container ID</param>
            <param type="System.String, System" name="title">New task template title</param>
            <param type="System.String, System" name="description">New task template description</param>
            <param type="System.Guid, System" name="responsibleid">New task template responsible ID</param>
            <param type="System.Int32, System" name="categoryid">New task template category ID</param>
            <param type="System.Boolean, System" name="isNotify">Responsible notification: notifies or not</param>
            <param type="System.Int64, System" name="offsetTicks">New tick offset</param>
            <param type="System.Boolean, System" name="deadLineIsFixed">Defines if the deadline is fixed or not</param>
            <short>Update a task template</short> 
            <category>Task templates</category>
            <returns>Task template</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/tasktemplatecontainer/{containerid}/tasktemplate</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTaskTemplate(System.Int32)">
            <summary>
            Deletes a task template with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="id">Task template ID</param>
            <short>Delete a task template</short> 
            <category>Task templates</category>
            <returns>Task template</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/tasktemplatecontainer/tasktemplate/{id}</path>
            <httpMethod>DELETE</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskTemplateByID(System.Int32)">
            <summary>
            Returns a task template with the ID specified in the request.
            </summary>
            <param type="System.Int32, System" name="id">Task template ID</param>
            <short>Get a task template by ID</short> 
            <category>Task templates</category>
            <returns>Task template</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/tasktemplatecontainer/tasktemplate/{id}</path>
            <httpMethod>GET</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetAvaliableCurrency">
            <summary>
            Returns a list of all the currencies currently available on the portal.
            </summary>
            <short>Get available currencies</short> 
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyInfoWrapper, ASC.Api.CRM">
            List of available currencies
            </returns>
            <path>api/2.0/crm/settings/currency</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ConvertAmount(System.Decimal,System.String,System.String)">
            <summary>
            Returns a result of converting one currency into another.
            </summary>
            <param type="System.Decimal, System" method="url" name="amount">Amount to convert</param>
            <param type="System.String, System" method="url" name="fromcurrency">Currency to convert</param>
            <param type="System.String, System" method="url" name="tocurrency">Currency into which the original currency will be converted</param>
            <short>Convert a currency</short> 
            <category>Currencies</category>
            <returns>
            Decimal result of converting
            </returns>
            <path>api/2.0/crm/settings/currency/convert</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetSummaryTable(System.String)">
            <summary>
            Returns a summary table with the rates for the currency specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by API">Currency (abbreviation)</param>
            <short>Get currency summary table</short> 
            <category>Currencies</category>
            <returns type = "ASC.Api.CRM.CurrencyRateInfoWrapper, ASC.Api.CRM">
            Dictionary of currency rates for the specified currency
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/settings/currency/summarytable</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCRMContactStatusSettings(System.Nullable{System.Boolean})">
            <summary>
            Updates the contact status setting with the parameter specified in the request.  
            </summary>
            <param type="System.Nullable{System.Boolean}, System" name="changeContactStatusGroupAuto" remark="true, false or null">Defines if the contact status setting is changed automatically or not</param>
            <short>Update the contact status setting</short> 
            <category>Contacts</category>
            <returns>
            Updated contact status setting value (true, false or null)
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/contact/status/settings</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCRMWriteMailToHistorySettings(System.Boolean)">
            <summary>
            Updates the setting for writing mails to the history with the parameter specified in the request.   
            </summary>
            <param type="System.Boolean, System" name="writeMailToHistoryAuto" remark="true or false">Defines if the mails are written to the history automatically or not</param>
            <short>Update the setting for writing mails to the history</short> 
            <category>Contacts</category>
            <returns>
            Updated setting for writing mails to the history (true or false)
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/contact/mailtohistory/settings</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCRMContactTagSettings(System.Nullable{System.Boolean})">
            <summary>
            Updates the setting for adding tags to the contact with the parameter specified in the request.    
            </summary>
            <param type="System.Nullable{System.Boolean}, System" name="addTagToContactGroupAuto" remark="true, false or null">Defines if a tag is added to the contact automatically or not</param>
            <short>Update the setting for adding tags to the contact</short> 
            <category>Contacts</category>
            <returns>
            Updated setting for adding tags to the contact (true, false or null)
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/contact/tag/settings</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetIsPortalConfigured(System.Nullable{System.Boolean},System.Nullable{System.Guid})">
            <summary>
            Sets the tenant settings specified in the request to the portal.
            </summary>
            <param type="System.Nullable{System.Boolean}, System" name="configured">Defines if the portal is configured or not</param>
            <param type="System.Nullable{System.Guid}, System" name="webFormKey">Website contact form key</param>
            <short>Set the tenant settings</short> 
            <category>Contacts</category>
            <returns>
            The tenant setting for the portal configuration value (true or false)
            </returns>
            <path>api/2.0/crm/settings</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateOrganisationSettingsCompanyName(System.String)">
            <summary>
             Updates a company name with the one specified in the request.
            </summary>
            <param type="System.String, System" name="companyName">New company name</param>
            <short>Update a company name</short>
            <category>Organization</category>
            <returns>Updated company name</returns>
            <path>api/2.0/crm/settings/organisation/base</path>
            <httpMethod>PUT</httpMethod>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateOrganisationSettingsCompanyAddress(System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Updates a company address with the one specified in the request.
            </summary>
            <param type="System.String, System" name="street">New company street/building/apartment</param>
            <param type="System.String, System" name="city">New company city</param>
            <param type="System.String, System" name="state">New company state</param>
            <param type="System.String, System" name="zip">New company zip</param>
            <param type="System.String, System" name="country">New company country</param>
            <short>Update a company address</short>
            <category>Organization</category>
            <returns>Updated company address</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/settings/organisation/address</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateOrganisationSettingsLogo(System.Boolean)">
            <summary>
             Updates the organization logo setting with the parameter specified in the request.
            </summary>
            <param type="System.Boolean, System" name="reset">Resets the organization logo or not</param>
            <short>Update the organization logo setting</short>
            <category>Organization</category>
            <returns>Organization logo ID</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.Exception"></exception>
            <path>api/2.0/crm/settings/organisation/logo</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetOrganisationSettingsLogo(System.Int32)">
            <summary>
             Returns an organization logo with the ID specified in the request in the base64 format.
            </summary>
            <param type="System.Int32, System" method="url" name="id" remark="If this parameter is equal to 0, then the current logo is taken">Organization logo ID</param>
            <short>Get an organization logo</short>
            <category>Organization</category>
            <returns>Organization logo in the base64 format</returns>
            <exception cref="T:System.Exception"></exception>
            <path>api/2.0/crm/settings/organisation/logo</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ChangeWebToLeadFormKey">
            <summary>
             Updates the website contact form key.
            </summary>
            <short>Update the web form key</short>
            <category>Contacts</category>
            <returns>Updated web form key</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/settings/webformkey/change</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCRMCurrency(System.String)">
            <summary>
            Updates the default CRM currency with the currency specified in the request.
            </summary>
            <param type="System.String, System" name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by API">Currency (abbreviation)</param>
            <short>Update a currency</short>
            <category>Currencies</category>
            <returns type="ASC.Api.CRM.CurrencyInfoWrapper, ASC.Api.CRM">Updated currency</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/settings/currency</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.StartImportFromCSV(System.String,System.String,System.String)">
            <summary>
            Starts an import of the contacts, opportunities, cases, or tasks from the csv file specified in the request.
            </summary>
            <param type="System.String, System" name="entityType" remark="Allowed values: contact, task, opportunity, case">Entity type</param>
            <param type="System.String, System" name="csvFileURI">URI to the csv file</param>
            <param type="System.String, System" name="jsonSettings">JSON settings in the string format</param>
            <short>Start import from csv file</short>
            <category>Import</category>
            <path>api/2.0/crm/{entityType}/import/start</path>
            <httpMethod>POST</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetImportFromCSVStatus(System.String)">
            <summary>
            Returns an import status of the csv file.
            </summary>
            <param type="System.String, System" name="entityType" remark="Allowed values: contact, task, opportunity, case">Entity type</param>
            <short>Get import status</short>
            <category>Import</category>
            <returns>Import status</returns>
            <path>api/2.0/crm/{entityType}/import/status</path>
            <httpMethod>GET</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetImportFromCSVSampleRow(System.String,System.Int32,System.String)">
            <summary>
            Returns a sample row from the imported csv file specified in the request.
            </summary>
            <param type="System.String, System" name="csvFileURI">URI to the csv file</param>
            <param type="System.Int32, System" name="indexRow">Sample row index</param>
            <param type="System.String, System" name="jsonSettings">JSON settings in the string format</param>
            <short>Get a sample row</short>
            <category>Import</category>
            <returns>Sample row</returns>
            <path>api/2.0/crm/import/samplerow</path>
            <httpMethod>GET</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ProcessUploadFake(System.String,System.String)">
            <summary>
            Processes a fake upload of the csv file specified in the request.
            </summary>
            <param type="System.String, System" name="csvFileURI">URI to the csv file</param>
            <param type="System.String, System" name="jsonSettings">JSON settings in the string format</param>
            <short>Process fake upload</short>
            <category>Import</category>
            <returns>Uploaded file</returns>
            <path>api/2.0/crm/import/uploadfake</path>
            <httpMethod>POST</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetExportStatus">
            <summary>
            Returns an export status of the csv file.
            </summary>
            <short>Get export status</short>
            <category>Export</category>
            <returns>Export status</returns>
            <path>api/2.0/crm/export/status</path>
            <httpMethod>GET</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CancelExport">
            <summary>
            Cancels an export to the csv file.
            </summary>
            <short>Cancel export to csv file</short>
            <category>Export</category>
            <returns>Export status</returns>
            <path>api/2.0/crm/export/cancel</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.StartExport">
            <summary>
            Starts an export to the csv file.
            </summary>
            <short>Start export to csv file</short>
            <category>Export</category>
            <returns>Export data operation</returns>
            <path>api/2.0/crm/export/start</path>
            <httpMethod>POST</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetPartialExportStatus">
            <summary>
            Returns a status of partial export to the csv file.
            </summary>
            <short>Get status of partial export</short>
            <category>Export</category>
            <returns>Partial export status</returns>
            <path>api/2.0/crm/export/partial/status</path>
            <httpMethod>GET</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CancelPartialExport">
            <summary>
            Cancels a partial export to the csv file.
            </summary>
            <short>Cancel partial export to csv file</short>
            <category>Export</category>
            <returns>Partial export status</returns>
            <path>api/2.0/crm/export/partial/cancel</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.StartPartialExport(System.String,System.String)">
            <summary>
            Starts a partial export to the csv file.
            </summary>
            <param type="System.String, System" name="entityType" remark="Allowed values: contact, task, opportunity, case, invoiceitem">Entity type</param>
            <param type="System.String, System" name="base64FilterString">Filter string in the base64 format</param>
            <short>Start partial export to csv file</short>
            <category>Export</category>
            <returns>Export data operation</returns>
            <path>api/2.0/crm/export/partial/{entityType}/start</path>
            <httpMethod>POST</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetAvailablePhoneNumbers(ASC.VoipService.Twilio.PhoneNumberType,System.String)">
            <summary>
             Returns all the available phone numbers matching the parameters specified in the request.
            </summary>
            <param type="ASC.VoipService.Twilio.PhoneNumberType, ASC.VoipService.Twilio" name="numberType">Number type</param>
            <param type="System.String, System" name="isoCountryCode">ISO country code</param>
            <short>Get filtered phone numbers</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipPhone, ASC.VoipService">Phone numbers</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/voip/numbers/available</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetUnlinkedPhoneNumbers">
            <summary>
             Returns a list of all the unlinked phone numbers.
            </summary>
            <short>Get unlinked phone numbers</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipPhone, ASC.VoipService">List of unlinked phone numbers</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/unlinked</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetExistingPhoneNumbers">
            <summary>
            Returns all the existing phone numbers.
            </summary>
            <short>Get all phone numbers</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipPhone, ASC.VoipService">Existing phone numbers</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/existing</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.BuyNumber(System.String)">
            <summary>
             Buys a phone number specified in the request.
            </summary>
            <param type="System.String, System" name="number">Phone number</param>
            <short>Buy a phone number</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipPhone, ASC.VoipService">Phone number</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.LinkNumber(System.String)">
            <summary>
             Links a new phone number with the ID specified in the request to the VoIP provider.
            </summary>
            <param type="System.String, System" name="id">Phone number ID</param>
            <short>Link a phone number</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipPhone, ASC.VoipService">Phone number</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/link</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteNumber(System.String)">
            <summary>
             Deletes a phone number with the ID specified in the request.
            </summary>
            <param type="System.String, System" name="numberId">Phone number ID</param>
            <short>Delete a phone number</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipPhone, ASC.VoipService">Phone number</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/{numberId}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetNumber(System.String)">
            <summary>
             Returns a phone number with the ID specified in the request.
            </summary>
            <param type="System.String, System" name="numberId">Phone number ID</param>
            <short>Get a phone number</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipPhone, ASC.VoipService">Phone number</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/{numberId}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCurrentNumber">
            <summary>
             Returns the current phone number.
            </summary>
            <short>Get the current phone number</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipPhone, ASC.VoipService">Current phone number</returns>
            <path>api/2.0/crm/voip/numbers/current</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetToken">
            <summary>
             Returns a token for the current phone number.
            </summary>
            <short>Get a phone number token</short>
            <category>VoIP</category>
            <returns>Token</returns>
            <path>api/2.0/crm/voip/token</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateSettings(System.String,System.String,System.String,System.String,System.String,ASC.VoipService.WorkingHours,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
             Updates the settings of the phone number with the ID specified in the request.
            </summary>
            <param type="System.String, System" method="url" name="numberId">Phone number ID</param>
            <param type="System.String, System" name="greeting">New first greeting that callers hear when they call to this phone number</param>
            <param type="System.String, System" name="holdUp">New music on hold that callers hear when they are placed in the waiting queue</param>
            <param type="System.String, System" name="wait">New URL to which the customer is redirected to the voice mail service when the waiting timeout is exceeded</param>
            <param type="System.String, System" name="voiceMail">New message that callers hear when the waiting queue length or max waiting time is exceeded and the callers are able to leave a voicemail message</param>
            <param type="ASC.VoipService.WorkingHours, ASC.VoipService" file="ASC.VoipService" name="workingHours">New phone number working hours</param>
            <param type="System.Nullable{System.Boolean}, System" name="allowOutgoingCalls">Defines if a phone number allows making the outgoing calls or not</param>
            <param type="System.Nullable{System.Boolean}, System" name="record">Defines if the phone number allows recording the calls or not</param>
            <param type="System.String, System" name="alias">New phone number alias</param>
            <short>Update the phone number settings</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipPhone, ASC.VoipService">Updated phone number settings</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/{numberId}/settings</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateSettings(ASC.VoipService.Queue,System.Boolean)">
            <summary>
             Updates the VoIP settings with the parameters specified in the request.
            </summary>
            <param type="ASC.VoipService.Queue, ASC.VoipService" name="queue">Connection waiting queue</param>
            <param type="System.Boolean, System" name="pause">Defines if the operator have some time before accepting calls again. This can be used to take some notes on the previous call, etc.</param>
            <short>Update the VoIP settings</short>
            <category>VoIP</category>
            <returns>Updated VoIP settings</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/settings</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetVoipSettings">
            <summary>
             Returns the VoIP settings.
            </summary>
            <short>Get the VoIP settings</short>
            <category>VoIP</category>
            <returns>VoIP settings</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/settings</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetUploadedFilesUri">
            <summary>
             Returns the links to the VoIP uploaded files.
            </summary>
            <short>Get the links to the uploaded files</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipUpload, ASC.VoipService">Links to the VoIP uploaded files</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/uploads</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteUploadedFile(ASC.VoipService.AudioType,System.String)">
            <summary>
             Deletes an uploaded file with the name specified in the request.
            </summary>
            <param type="ASC.VoipService.AudioType, ASC.VoipService" name="audioType">Audio type</param>
            <param type="System.String, System" name="fileName">Uploaded file name</param>
            <short>Delete an uploaded file</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.VoipUpload, ASC.VoipService">Uploaded file</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <path>api/2.0/crm/voip/uploads</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetOperators(System.String)">
            <summary>
             Returns the operators of the phone number with the ID specified in the request.
            </summary>
            <param type="System.String, System" name="numberId">Phone number ID</param>
            <short>Get operators</short>
            <category>VoIP</category>
            <returns>Phone number operators</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/{numberId}/oper</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddOperators(System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
             Adds the operators to the phone number with the ID specified in the request.
            </summary>
            <param type="System.String, System" name="numberId">Phone number ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="operators">Phone number operators</param>
            <short>Add operators</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.Agent, ASC.VoipService">Added phone number operators</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <path>api/2.0/crm/voip/numbers/{numberId}/oper</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteOperator(System.String,System.Guid)">
            <summary>
             Deletes an operator from the phone number with the ID specified in the request.
            </summary>
            <param type="System.String, System" name="numberId">Phone number ID</param>
            <param type="System.Guid, System" name="oper">Phone number operator GUID</param>
            <short>Delete an operator</short>
            <category>VoIP</category>
            <returns>Phone number operator</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/numbers/{numberId}/oper</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateOperator(System.Guid,System.Nullable{ASC.VoipService.AgentStatus},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{ASC.VoipService.AnswerType},System.String)">
            <summary>
             Updates a phone number operator with the parameters specified in the request.
            </summary>
            <param type="System.Guid, System" method="url" name="operatorId">Phone number operator ID</param>
            <param type="System.Nullable{ASC.VoipService.AgentStatus}, System" name="status">New operator status</param>
            <param type="System.Nullable{System.Boolean}, System" name="allowOutgoingCalls">Defines if an operator allows making the outgoing calls or not</param>
            <param type="System.Nullable{System.Boolean}, System" name="record">Defines if an operator allows recording calls or not</param>
            <param type="System.Nullable{ASC.VoipService.AnswerType}, System" name="answerType">New operator answer type</param>
            <param type="System.String, System" name="redirectToNumber">New redirect phone number</param>
            <short>Update an operator</short>
            <category>VoIP</category>
            <returns type="ASC.VoipService.Agent, ASC.VoipService">Updated operator</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/opers/{operatorId}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.MakeCall(System.String,System.String)">
            <summary>
             Makes a call to the phone number specified in the request.
            </summary>
            <param type="System.String, System" name="to">Phone number to call</param>
            <param type="System.String, System" name="contactId">Contact ID</param>
            <short>Make a call</short>
            <category>VoIP</category>
            <returns type="ASC.Api.CRM.Wrappers.VoipCallWrapper, ASC.Api.CRM">Phone call information</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <path>api/2.0/crm/voip/call</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AnswerCall(System.String)">
            <summary>
            Answers a phone call with the ID specified in the request.
            </summary>
            <param type="System.String, System" name="callId">Phone call ID</param>
            <short>Answer a call</short>
            <category>VoIP</category>
            <returns type="ASC.Api.CRM.Wrappers.VoipCallWrapper, ASC.Api.CRM">Phone call information</returns>
            <path>api/2.0/crm/voip/call/{callId}/answer</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.RejectCall(System.String)">
            <summary>
             Rejects a phone call with the ID specified in the request.
            </summary>
            <param type="System.String, System" name="callId">Phone call ID</param>
            <short>Reject a call</short>
            <category>VoIP</category>
            <returns type="ASC.Api.CRM.Wrappers.VoipCallWrapper, ASC.Api.CRM">Phone call information</returns>
            <path>api/2.0/crm/voip/call/{callId}/reject</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ReditectCall(System.String,System.String)">
            <summary>
             Redirects a phone call with the ID specified in the request to the specified phone number.
            </summary>
            <param type="System.String, System" name="callId">Phone call ID</param>
            <param type="System.String, System" name="to">Phone number to redirect the phone call</param>
            <short>Redirect a call</short>
            <category>VoIP</category>
            <returns type="ASC.Api.CRM.Wrappers.VoipCallWrapper, ASC.Api.CRM">Phone call information</returns>
            <path>api/2.0/crm/voip/call/{callId}/redirect</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SaveCall(System.String,System.String,System.String,System.Guid,System.Nullable{ASC.VoipService.VoipCallStatus},System.String,System.Nullable{System.Decimal})">
            <summary>
            Saves a call with the parameters specified in the request. 
            </summary>
            <param type="System.String, System" method="url" name="callId">Phone call ID</param>
            <param type="System.String, System" name="from">Phone number that is calling</param>
            <param type="System.String, System" name="to">Phone number to call</param>
            <param type="System.Guid, System" name="answeredBy">Phone number ID that answered a call</param>
            <param type="System.Nullable{ASC.VoipService.VoipCallStatus}, System" name="status">Phone call status</param>
            <param type="System.String, System" name="contactId">Contact ID</param>
            <param type="System.Nullable{System.Decimal}, System" name="price">Phone call price</param>
            <short>Save a call</short>
            <category>VoIP</category>
            <returns type="ASC.Api.CRM.Wrappers.VoipCallWrapper, ASC.Api.CRM">Phone call information</returns>
            <path>api/2.0/crm/voip/call/{callId}</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SavePrice(System.String)">
            <summary>
             Saves a price for the call with the ID specified in the request.
            </summary>
            <param type="System.String, System" name="callId">Phone call ID</param>
            <short>Save a call price</short>
            <category>VoIP</category>
            <path>api/2.0/crm/voip/price/{callId}</path>
            <httpMethod>POST</httpMethod>
            <returns></returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCalls(System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Nullable{System.Guid},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of the calls matching the parameters specified in the request. 
            </summary>
            <param type="System.String, System" name="callType">Phone call type</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="from">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="to">End date</param>
            <param type="System.Nullable{System.Guid}, System" name="agent">Call agent</param>
            <param type="System.Nullable{System.Int32}, System" name="client">Call client</param>
            <param type="System.Nullable{System.Int32}, System" name="contactID">Contact ID</param>
            <short>Get calls</short>
            <category>VoIP</category>
            <returns type="ASC.Api.CRM.Wrappers.VoipCallWrapper, ASC.Api.CRM">List of calls</returns>
            <path>api/2.0/crm/voip/call</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetMissedCalls">
            <summary>
             Returns a list of all the missed calls.
            </summary>
            <short>Get missed calls</short>
            <category>VoIP</category>
            <returns type="ASC.Api.CRM.Wrappers.VoipCallWrapper, ASC.Api.CRM">List of missed calls</returns>
            <path>api/2.0/crm/voip/call/missed</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCall(System.String)">
            <summary>
            Returns the detailed information about a phone call with the ID specified in the request. 
            </summary>
            <param type="System.String, System" name="callId">Phone call ID</param>
            <short>Get a call</short>
            <category>VoIP</category>
            <returns type="ASC.Api.CRM.Wrappers.VoipCallWrapper, ASC.Api.CRM">Phone call information</returns>
            <path>api/2.0/crm/voip/call/{callId}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.CasesWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CasesWrapper.Members">
            <type>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</type>
            <collection>list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CasesWrapper.CreateBy">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CasesWrapper.Created">
            <example>2020-12-08T17:37:04.5736385Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CasesWrapper.Title">
            <example>Exhibition organization</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CasesWrapper.IsClosed">
            <example>false</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CasesWrapper.IsPrivate">
            <example>false</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CasesWrapper.AccessList">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
            <collection>list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CasesWrapper.CanEdit">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CasesWrapper.CustomFields">
            <type>ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper, ASC.Api.CRM</type>
            <collection>list</collection>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.Address">
            <summary>
              Address
            </summary>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.Address.Street">
            <example>Lubanas st. 125a-25</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.Address.City">
            <example></example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.Address.State">
            <example></example>
            <order>3</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.Address.Zip">
            <example>LV-1021</example>
            <order>4</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.Address.Country">
            <example>Latvia</example>
            <order>5</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.Address.Category">
            <example type="int">0</example>
            <order>6</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.Address.CategoryName">
            <example>Home</example>
            <order>7</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.Address.IsPrimary">
            <example>true</example>
            <order>8</order>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactInfoWrapper">
             <summary>
               Contact information
             </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactInfoWrapper.InfoType">
            <example type="int">1</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactInfoWrapper.Category">
            <example type="int">0</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactInfoWrapper.Data">
            <example>support@onlyoffice.com</example>
            <order>3</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactInfoWrapper.CategoryName">
            <example>Home</example>
            <order>4</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactInfoWrapper.IsPrimary">
            <example>true</example>
            <order>5</order>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.PersonWrapper">
             <summary>
               Person
             </summary>
            <inherited>ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.PersonWrapper.FirstName">
            <example>Tadjeddine</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.PersonWrapper.LastName">
            <example>Bachir</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.PersonWrapper.Company">
            <type>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.PersonWrapper.Title">
            <example>Programmer</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.CompanyWrapper">
            <summary>
             Company
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CompanyWrapper.CompanyName">
            <example>Food and Culture Project</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CompanyWrapper.Persons">
            <type>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</type>
            <collection>list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CompanyWrapper.PersonsCount">
            <example type="int">33</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.Addresses">
            <type>ASC.Api.CRM.Wrappers.Address, ASC.Api.CRM</type>
            <collection>list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.CreateBy">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.Created">
            <example>2020-12-08T17:37:04.5916406Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.About">
            <example>About</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.Industry">
            <example>Industry</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.ContactStatus">
            <type>ASC.Api.CRM.Wrappers.ContactStatusBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.ContactType">
            <type>ASC.Api.CRM.Wrappers.ContactTypeBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.CommonData">
            <type>ASC.Api.CRM.Wrappers.ContactInfoWrapper, ASC.Api.CRM</type>
            <collection>list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.CustomFields">
            <type>ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper, ASC.Api.CRM</type>
            <collection>list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.Tags">
            <example>Tag1,Tag2</example>
            <collection split=",">list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.TaskCount">
            <example type="int">1</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactWrapper.HaveLateTasks">
            <example>true</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactBaseWithEmailWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWithEmailWrapper.Email">
            <type>ASC.Api.CRM.Wrappers.ContactInfoWrapper, ASC.Api.CRM</type>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactBaseWrapper">
             <summary>
              Contact base information
             </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.SmallFotoUrl">
            <example>url to foto</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.MediumFotoUrl">
            <example>url to foto</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.DisplayName">
            <example>Tadjeddine Bachir</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.IsCompany">
            <example>false</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.AccessList">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
            <collection>list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.IsPrivate">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.IsShared">
            <example>false</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.ShareType">
            <example type="int">0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.Currency">
            <type>ASC.Api.CRM.CurrencyInfoWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.CanEdit">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactBaseWrapper.CanDelete">
            <example>true</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper">
            <summary>
             Invoice
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Status">
            <type>ASC.Api.CRM.Wrappers.InvoiceStatusWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Number">
            <example></example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.IssueDate">
            <example>2020-12-14T22:13:41.5378233Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.TemplateType">
            <example type="int">0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Contact">
            <type>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Consignee">
            <type>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Entity">
            <type>ASC.Api.CRM.Wrappers.EntityWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.DueDate">
            <example>2020-12-14T22:13:41.5378233Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Language">
            <example></example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Currency">
            <type>ASC.Api.CRM.CurrencyInfoWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.ExchangeRate">
            <example type="double">1,0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.PurchaseOrderNumber">
            <example></example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Terms">
            <example></example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Description">
            <example></example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.FileID">
            <example type="int">-1</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.CreateOn">
            <example>2020-12-14T22:13:41.5378233Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.CreateBy">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.Cost">
            <example type="double">0,0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.CanEdit">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper.CanDelete">
            <example>true</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceWrapper">
            <summary>
             Invoice
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.InvoiceBaseWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceWrapper.InvoiceLines">
            <type>ASC.Api.CRM.Wrappers.InvoiceLineWrapper, ASC.Api.CRM</type>
            <collection>list</collection>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceItemWrapper">
            <summary>
             Invoice Item
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.Title">
            <example>Title</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.StockKeepingUnit">
            <example>StockKeepingUnit</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.Description">
            <example>Description</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.Price">
            <example type="double">1.2</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.Currency">
            <type>ASC.Api.CRM.CurrencyInfoWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.StockQuantity">
            <example type="decimal">2.2</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.TrackInvenory">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.InvoiceTax1">
            <type>ASC.Api.CRM.Wrappers.InvoiceTaxWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.InvoiceTax2">
            <type>ASC.Api.CRM.Wrappers.InvoiceTaxWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.CreateOn">
            <example>2020-12-14T22:13:41.5378233Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.CreateBy">
            <example>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.CanEdit">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceItemWrapper.CanDelete">
            <example>true</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceTaxWrapper">
            <summary>
             Invoice Tax
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceTaxWrapper.Name">
            <example>Name</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceTaxWrapper.Description">
            <example>Description</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceTaxWrapper.Rate">
            <example type="double">Rate</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceTaxWrapper.CreateOn">
            <example>2020-12-14T22:13:41.5378233Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceTaxWrapper.CreateBy">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceTaxWrapper.CanEdit">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceTaxWrapper.CanDelete">
            <example>true</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceLineWrapper">
            <summary>
             Invoice Line
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceLineWrapper.InvoiceID">
            <example type="int">0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceLineWrapper.InvoiceItemID">
            <example type="int">0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceLineWrapper.InvoiceTax1ID">
            <example type="int">0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceLineWrapper.InvoiceTax2ID">
            <example type="int">0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceLineWrapper.SortOrder">
            <example type="int">0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceLineWrapper.Description">
            <example>Description</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceLineWrapper.Quantity">
            <example type="double">0,0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceLineWrapper.Price">
            <example type="double">0,0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceLineWrapper.Discount">
            <example type="double">0,0</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceStatusWrapper">
            <summary>
             Invoice Status
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.InvoiceStatusWrapper.Title">
            <example>Title</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.CustomFieldWrapper">
            <inherited>ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CustomFieldWrapper.RelativeItemsCount">
            <example type="int">0</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper">
            <summary>
             User custom fields
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper.EntityId">
            <example type="int">14523423</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper.Label">
            <example>Birthdate</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper.FieldValue">
            <example>2020-12-08T17:37:04.5916406Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper.FieldType">
            <example type="int">5</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper.Position">
            <example type="int">10</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper.Mask">
            <example></example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.OpportunityWrapper">
            <summary>
             Opportunity
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.CreateBy">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.Created">
            <example>2020-12-11T03:36:09.7011881Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.Members">
            <type>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</type>
            <collection>list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.Contact">
            <type>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.Title">
            <example>Hotel catalogue</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.Description">
            <example>description</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.Responsible">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.BidType">
            <example type="int">0</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.BidValue">
            <example type="double">1,1</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.BidCurrency">
            <type>ASC.Api.CRM.CurrencyInfoWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.PerPeriodValue">
            <example type="int">1</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.Stage">
            <type>ASC.Api.CRM.Wrappers.DealMilestoneBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.SuccessProbability">
            <example type="int">65</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.ActualCloseDate">
            <example>2020-12-11T03:36:09.7011881Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.ExpectedCloseDate">
            <example>2020-12-11T03:36:09.7011881Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.IsPrivate">
            <example>false</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.AccessList">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
            <collection>list</collection>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.CanEdit">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.OpportunityWrapper.CustomFields">
            <type>ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper, ASC.Api.CRM</type>
            <collection>list</collection>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.HistoryCategoryBaseWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ListItemWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.HistoryCategoryBaseWrapper.ImagePath">
            <example>path to image</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.HistoryCategoryWrapper">
            <inherited>ASC.Api.CRM.Wrappers.HistoryCategoryBaseWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.HistoryCategoryWrapper.RelativeItemsCount">
            <example>1</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.DealMilestoneBaseWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ListItemWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.DealMilestoneBaseWrapper.SuccessProbability">
            <example type="int">20</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.DealMilestoneBaseWrapper.StageType">
            <example type="int">0</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.DealMilestoneWrapper">
            <inherited>ASC.Api.CRM.Wrappers.DealMilestoneBaseWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.DealMilestoneWrapper.RelativeItemsCount">
            <example type="int">1</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.TaskCategoryBaseWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ListItemWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskCategoryBaseWrapper.ImagePath">
            <example>path to image</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.TaskCategoryWrapper">
            <inherited>ASC.Api.CRM.Wrappers.TaskCategoryBaseWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskCategoryWrapper.RelativeItemsCount">
            <example type="int">1</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactStatusBaseWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ListItemWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactStatusWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ContactStatusBaseWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactStatusWrapper.RelativeItemsCount">
            <example type="int">1</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactTypeBaseWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ListItemWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactTypeWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ContactTypeBaseWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ContactTypeWrapper.RelativeItemsCount">
            <example type="int">1</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TagWrapper.Title">
            <example>Tag</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TagWrapper.RelativeItemsCount">
            <example type="int">1</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ListItemWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ListItemWrapper.Title">
            <example>Title</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ListItemWrapper.Description">
            <example>Description</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ListItemWrapper.Color">
            <example>#a7fc00</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ListItemWrapper.SortOrder">
            <example type="int">1</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.ObjectWrapperBase.ID">
            <example name="id" type="int">1234</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.EntityWrapper.EntityType">
            <example>opportunity</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.EntityWrapper.EntityId">
            <example type="int">123445</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.EntityWrapper.EntityTitle">
            <example>Household appliances internet shop</example>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.RelationshipEventWrapper">
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.RelationshipEventWrapper.CreateBy">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.RelationshipEventWrapper.Created">
            <example>2020-12-13T17:13:31.5902727Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.RelationshipEventWrapper.Content">
            <example>Agreed to meet at lunch and discuss the client commercial offer</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.RelationshipEventWrapper.Category">
            <type>ASC.Api.CRM.Wrappers.HistoryCategoryBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.RelationshipEventWrapper.Contact">
            <type>ASC.Api.CRM.Wrappers.ContactBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.RelationshipEventWrapper.Entity">
            <type>ASC.Api.CRM.Wrappers.EntityWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.RelationshipEventWrapper.CanEdit">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.RelationshipEventWrapper.Files">
            <type>ASC.Api.Documents.FileWrapper, ASC.Api.Documents</type>
            <collection>list</collection>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.TaskWrapper">
            <summary>
             Task
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.CreateBy">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.Created">
            <example>2020-12-16T03:11:54.3573531Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.Contact">
            <type>ASC.Api.CRM.Wrappers.ContactBaseWithEmailWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.Title">
            <example>Send a commercial offer</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.Description">
            <example>Description</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.DeadLine">
            <example>2020-12-16T03:11:54.3573531Z</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.AlertValue">
            <example type="int">1</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.Responsible">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.IsClosed">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.Category">
            <type>ASC.Api.CRM.Wrappers.TaskCategoryBaseWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.Entity">
            <type>ASC.Api.CRM.Wrappers.EntityWrapper, ASC.Api.CRM</type>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.TaskWrapper.CanEdit">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.Id">
            <example>Id</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.From">
            <example>From</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.To">
            <example>To</example>
            <order>3</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.Status">
            <example type="int">1</example>
            <order>4</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.AnsweredBy">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
            <order>5</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.DialDate">
            <example>2020-12-23T04:11:57.1649297Z</example>
            <order>6</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.DialDuration">
            <example type="int">1</example>
            <order>7</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.Cost">
            <example type="double">5.3</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.Contact">
            <type>ASC.Api.CRM.Wrappers.ContactWrapper, ASC.Api.CRM</type>
            <order>11</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.Calls">
            <example>null</example>
            <order>11</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.RecordUrl">
            <example>RecordUrl</example>
            <order>13</order>
        </member>
        <member name="P:ASC.Api.CRM.Wrappers.VoipCallWrapper.RecordDuration">
            <example type="int">2</example>
            <order>14</order>
        </member>
        <member name="T:ASC.Api.CRM.CurrencyRateWrapper">
            <summary>
             Currency rate
            </summary>
            <inherited>ASC.Api.CRM.Wrappers.ObjectWrapperBase, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyRateWrapper.FromCurrency">
            <example>EUR</example>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyRateWrapper.ToCurrency">
            <example>USD</example>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyRateWrapper.Rate">
            <example type="decimal">1.1</example>
        </member>
        <member name="T:ASC.Api.CRM.CurrencyInfoWrapper">
            <summary>
             Currency information
            </summary>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyInfoWrapper.Title">
            <example>Chinese Yuan</example>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyInfoWrapper.Symbol">
            <example>¥</example>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyInfoWrapper.Abbreviation">
            <example>CNY</example>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyInfoWrapper.CultureName">
            <example>CN</example>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyInfoWrapper.IsConvertable">
            <example>true</example>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyInfoWrapper.IsBasic">
            <example>false</example>
        </member>
        <member name="T:ASC.Api.CRM.CurrencyRateInfoWrapper">
            <summary>
             Currency rate information
            </summary>
            <inherited>ASC.Api.CRM.CurrencyInfoWrapper, ASC.Api.CRM</inherited>
        </member>
        <member name="P:ASC.Api.CRM.CurrencyRateInfoWrapper.Rate">
            <example type="double">1,1</example>
        </member>
    </members>
</doc>
