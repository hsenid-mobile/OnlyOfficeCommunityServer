<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.Security</name>
    </assembly>
    <members>
        <member name="T:ASC.Api.Security.SecurityApi">
            <summary>
            Security API.
            </summary>
            <name>security</name>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.GetLastLoginEvents">
            <summary>
            Returns all the latest user login activity including successful logins and failed attempts with an indication of reasons.
            </summary>
            <short>
            Get login history
            </short>
            <category>Login history</category>
            <returns>List of login events</returns>
            <collection>list</collection>
            <path>api/2.0/security/audit/login/last</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.GetLastAuditEvents">
            <summary>
            Returns a list of the latest changes (creation, modification, deletion, etc.) made by users to the entities (tasks, opportunities, files, etc.) on the portal.
            </summary>
            <short>
            Get audit trail data
            </short>
            <category>Audit trail data</category>
            <returns>List of audit trail data</returns>
            <collection>list</collection>
            <path>api/2.0/security/audit/events/last</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.GetLoginEventsByFilter(System.Guid,ASC.MessagingSystem.MessageAction,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of the login events by the parameters specified in the request.
            </summary>
            <short>
            Get filtered login events
            </short>
            <category>Login history</category>
            <param type="System.Guid, System" name="userId">User ID</param>
            <param type="ASC.MessagingSystem.MessageAction, ASC.MessagingSystem" name="action">Action</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="from">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="to">End date</param>
            <returns>List of filtered login events</returns>
            <collection>list</collection>
            <path>api/2.0/security/audit/login/filter</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.GetAuditEventsByFilter(System.Guid,ASC.AuditTrail.Types.ProductType,ASC.AuditTrail.Types.ModuleType,ASC.AuditTrail.Types.ActionType,ASC.MessagingSystem.MessageAction,ASC.AuditTrail.Types.EntryType,System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of the audit events by the parameters specified in the request.
            </summary>
            <short>
            Get filtered audit trail data
            </short>
            <category>Audit trail data</category>
            <param type="System.Guid, System" name="userId">User ID</param>
            <param type="ASC.AuditTrail.Types.ProductType, ASC.AuditTrail.Types" name="productType">Product</param>
            <param type="ASC.AuditTrail.Types.ModuleType, ASC.AuditTrail.Types" name="moduleType">Module</param>
            <param type="ASC.AuditTrail.Types.ActionType, ASC.AuditTrail.Types" name="actionType">Action type</param>
            <param type="ASC.MessagingSystem.MessageAction, ASC.MessagingSystem" name="action">Action</param>
            <param type="ASC.AuditTrail.Types.EntryType, ASC.AuditTrail.Types" name="entryType">Entry</param>
            <param type="System.String, System" name="target">Target</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="from">Start date</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="to">End date</param>
            <returns>List of filtered audit trail data</returns>
            <collection>list</collection>
            <path>api/2.0/security/audit/events/filter</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.GetTypes">
            <summary>
            Returns all the available audit trail types.
            </summary>
            <short>
            Get audit trail types
            </short>
            <category>Audit trail data</category>
            <returns>Audit trail types</returns>
            <path>api/2.0/security/audit/types</path>
            <requiresAuthorization>false</requiresAuthorization>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.GetMappers(System.Nullable{ASC.AuditTrail.Types.ProductType},System.Nullable{ASC.AuditTrail.Types.ModuleType})">
            <summary>
            Returns the mappers for the audit trail types.
            </summary>
            <short>
            Get audit trail mappers
            </short>
            <category>Audit trail data</category>
            <param type="System.Nullable{ASC.AuditTrail.Types.ProductType}, Systems" name="productType">Product</param>
            <param type="System.Nullable{ASC.AuditTrail.Types.ModuleType}, System" name="moduleType">Module</param>
            <returns>Audit trail mappers</returns>
            <path>api/2.0/security/audit/mappers</path>
            <requiresAuthorization>false</requiresAuthorization>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.CreateLoginHistoryReport">
            <summary>
            Generates the login history report.
            </summary>
            <short>
            Generate the login history report
            </short>
            <category>Login history</category>
            <returns>URL to the xlsx report file</returns>
            <path>api/2.0/security/audit/login/report</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.CreateAuditTrailReport">
            <summary>
            Generates the audit trail report.
            </summary>
            <short>
            Generate the audit trail report
            </short>
            <category>Audit trail data</category>
            <returns>URL to the xlsx report file</returns>
            <path>api/2.0/security/audit/events/report</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.GetAuditSettings">
            <summary>
            Returns the audit trail settings.
            </summary>
            <short>
            Get the audit trail settings
            </short>
            <category>Audit trail data</category>
            <returns>Audit settings</returns>
            <path>api/2.0/security/audit/settings/lifetime</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.SetAuditSettings(ASC.Core.Tenants.TenantAuditSettings)">
            <summary>
            Sets the audit trail settings for the current portal.
            </summary>
            <short>
            Set the audit trail settings
            </short>
            <category>Audit trail data</category>
            <param type="ASC.Core.Tenants.TenantAuditSettings, ASC.Core.Tenants" name="settings">Audit trail settings</param>
            <returns>Audit trail settings</returns>
            <path>api/2.0/security/audit/settings/lifetime</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.GetAllActiveConnections">
            <summary>
            Returns all the active connections to the portal.
            </summary>
            <short>
            Get active connections
            </short>
            <category>Active connections</category>
            <returns>Active portal connections</returns>
            <path>api/2.0/security/activeconnections</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.LogOutAllActiveConnectionsChangePassword">
            <summary>
            Logs out from all the active connections for the current user and changes their password.
            </summary>
            <short>
            Log out and change password
            </short>
            <category>Active connections</category>
            <returns>URL to the confirmation message for changing a password</returns>
            <path>api/2.0/security/activeconnections/logoutallchangepassword</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.LogOutAllActiveConnectionsForUser(System.Guid)">
            <summary>
            Logs out from all the active connections for the user with the ID specified in the request.
            </summary>
            <short>
            Log out for the user by ID
            </short>
            <category>Active connections</category>
            <param type="System.Guid, System" name="userId">User ID</param>
            <path>api/2.0/security/activeconnections/logoutall/{userId}</path>
            <httpMethod>PUT</httpMethod>
            <returns></returns>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.LogOutAllExceptThisConnection">
            <summary>
            Logs out from all the active connections except the current connection.
            </summary>
            <short>
            Log out from all connections
            </short>
            <category>Active connections</category>
            <returns>Current user name</returns>
            <path>api/2.0/security/activeconnections/logoutallexceptthis</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.LogOutActiveConnection(System.Int32)">
            <summary>
            Logs out from the connection with the ID specified in the request.
            </summary>
            <short>
            Log out from the connection
            </short>
            <category>Active connections</category>
            <param type="System.Int32, System" name="loginEventId">Login event ID</param>
            <returns>Boolean value: true if the operation is successful</returns>
            <path>api/2.0/security/activeconnections/logout/{loginEventId}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.UpdateLoginSettings(System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the login settings with the parameters specified in the request.
            </summary>
            <short>
            Update login settings
            </short>
            <category>Login history</category>
            <param type="System.Int32, System" name="attemptsCount">Maximum number of the user attempts to log in</param>
            <param type="System.Int32, System" name="blockTime">The time for which the user will be blocked after unsuccessful login attempts</param>
            <param type="System.Int32, System" name="checkPeriod">The time to wait for a response from the server</param>
            <returns>Updated login settings</returns>
            <path>api/2.0/security/loginsettings</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.GetImpersonateSettings">
            <summary>
            Returns the impersonation settings for the current portal.
            </summary>
            <short>
            Get impersonation settings
            </short>
            <category>Impersonation</category>
            <returns>Impersonation settings</returns>
            <path>api/2.0/security/impersonate/settings</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.UpdateImpersonateSettings(System.Boolean,ASC.Web.Core.Utility.ImpersonateEnableType,System.Boolean,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid})">
            <summary>
            Uppdates the impersonation settings with the parameters specified in the request.
            </summary>
            <short>
            Update impersonation settings
            </short>
            <category>Impersonation</category>
            <param type="System.Boolean, System" name="enable">Specifies whether impersonation is enabled or not</param>
            <param type="ASC.Web.Core.Utility.ImpersonateEnableType, ASC.Web.Core.Utility" name="enableType">Specifies for whom impersonation is enabled (DisableForAdmins, EnableForAllFullAdmins, or EnableWithLimits)</param>
            <param type="System.Boolean, System" name="onlyForOwnGroups">Specifies if impersonation is enabled only for the current user groups or not</param>
            <param type="System.Collections.Generic.List{System.Guid}, System" name="allowedAdmins">List of admins who can be impersonated</param>
            <param type="System.Collections.Generic.List{System.Guid}, System" name="restrictionUsers">List of users who cannot be impersonated</param>
            <param type="System.Collections.Generic.List{System.Guid}, System" name="restrictionGroups">List of groups who cannot be impersonated</param>
            <returns>Updated impersonation settings</returns>
            <path>api/2.0/security/impersonate/settings</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.CanImpersonateUser(System.Guid)">
            <summary>
            Checks if a user with the ID specified in the request can be impersonated or not.
            </summary>
            <short>
            Check user impersonation
            </short>
            <category>Impersonation</category>
            <param type="System.Guid, System" name="userId">User ID</param>
            <returns>Boolean value: true - the user can be impersonated, false - the user cannot be impersonated</returns>
            <path>api/2.0/security/impersonate/{userId}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.ImpersonateUser(System.Guid)">
            <summary>
            Impersonates a user with the ID specified in the request.
            </summary>
            <short>
            Impersonate a user
            </short>
            <category>Impersonation</category>
            <param type="System.Guid, System" name="userId">User ID</param>
            <returns>Cookies</returns>
            <path>api/2.0/security/impersonate/{userId}</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Security.SecurityApi.ImpersonateLogout">
            <summary>
            Log out from the account of the impersonated user.
            </summary>
            <short>
            Log out impersonated user
            </short>
            <category>Impersonation</category>
            <path>api/2.0/security/impersonate/logout</path>
            <httpMethod>PUT</httpMethod>
        </member>
    </members>
</doc>
