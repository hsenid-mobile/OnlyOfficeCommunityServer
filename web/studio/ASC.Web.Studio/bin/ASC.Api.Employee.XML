<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.Employee</name>
    </assembly>
    <members>
        <member name="P:ASC.Api.Employee.Contact.Type">
            <example>GTalk</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.Employee.Contact.Value">
            <example>my@gmail.com</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Original">
            <example>default_user_photo_size_1280-1280.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Retina">
            <example>default_user_photo_size_360-360.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Max">
            <example>default_user_photo_size_200-200.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Big">
            <example>default_user_photo_size_82-82.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Medium">
            <example>"default_user_photo_size_48-48.png</example>
        </member>
        <member name="P:ASC.Api.Employee.ThumbnailsDataWrapper.Small">
            <example>default_user_photo_size_32-32.png</example>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperSummary.Name">
            <example>Group Name</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperSummary.Id">
            <example>00000000-0000-0000-0000-000000000000</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperSummary.Manager">
            <example>Jake.Zazhitski</example>
            <order>9</order>
        </member>
        <member name="T:ASC.Api.Employee.EmployeeApi">
            <summary>
            Access to user profiles
            </summary>
            <name>people</name>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetMe">
            <summary>
            Returns the detailed information about the current user profile.
            </summary>
            <short>
            Get my profile
            </short>
            <category>Profiles</category>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Detailed information about my profile</returns>
            <path>api/2.0/people/@self</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetAll">
            <summary>
            Returns a list of profiles for all the portal users.
            </summary>
            <short>
            Get profiles
            </short>
            <category>Profiles</category>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">List of profiles</returns>
            <path>api/2.0/people</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetByStatus(ASC.Core.Users.EmployeeStatus)">
            <summary>
            Returns a list of profiles filtered by user status.
            </summary>
            <short>
            Get profiles by status
            </short>
            <param type="ASC.Core.Users.EmployeeStatus, ASC.Core.Users" name="status">User status ("Active", "Terminated", "LeaveOfAbsence", "All", or "Default")</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">List of profiles</returns>
            <category>User status</category>
            <path>api/2.0/people/status/{status}</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetById(System.String)">
            <summary>
            Returns the detailed information about a profile of the user with the name specified in the request.
            </summary>
            <short>
            Get a profile by user name
            </short>
            <category>Profiles</category>
            <param type="System.String, System" method="url" name="username">User name</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User profile</returns>
            <path>api/2.0/people/{username}</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetByEmail(System.String)">
            <summary>
            Returns the detailed information about a profile of the user with the email specified in the request.
            </summary>
            <short>
            Get a profile by user email
            </short>
            <category>Profiles</category>
            <param type="System.String, System" method="url" name="email">User email</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User profile</returns>
            <path>api/2.0/people/email</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetSearch(System.String)">
            <summary>
            Returns a list of profiles for all the portal users matching the search query.
            </summary>
            <short>
            Search user profiles
            </short>
            <category>Search</category>
            <param type="System.String, System" method="url" name="query">Query</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">List of user profiles</returns>
            <path>api/2.0/people/@search/{query}</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetPeopleSearch(System.String)">
            <summary>
            Returns a list of users matching the search query.
            </summary>
            <short>
            Search users
            </short>
            <category>Search</category>
            <param type="System.String, System" method="url" name="query">Search text</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">List of users</returns>
            <path>api/2.0/people/search</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetAdvanced(ASC.Core.Users.EmployeeStatus,System.String)">
            <summary>
            Returns a list of users matching the status filter and search query.
            </summary>
            <short>
            Search users by status filter
            </short>
            <category>Search</category>
            <param type="ASC.Core.Users.EmployeeStatus, ASC.Core.Users" method="url" name="status">User status ("Active", "Terminated", "LeaveOfAbsence", "All", or "Default")</param>
            <param type="System.String, System" method="url" name="query">Search query</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">List of users</returns>
            <path>api/2.0/people/status/{status}/search</path>
            <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SaveUsers(System.String,System.Boolean)">
            <summary>
            Imports the new portal users with the first name, last name, and email address.
            </summary>
            <short>
            Import users
            </short>
            <category>Profiles</category>
            <param type="System.String, System" name="userList">List of users</param>
            <param type="System.Boolean, System" name="importUsersAsCollaborators" optional="true">Specifies whether to import users as guests (true) or not (false)</param>
            <returns>Newly added users</returns>
            <path>api/2.0/people/import/save</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetStatus">
            <summary>
            Returns a status of the current user.
            </summary>
            <short>
            Get a user status
            </short>
            <returns>Current user information</returns>
            <category>User status</category>
            <path>api/2.0/people/import/status</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetFullByFilter(System.Nullable{ASC.Core.Users.EmployeeStatus},System.Nullable{System.Guid},System.Nullable{ASC.Core.Users.EmployeeActivationStatus},System.Nullable{ASC.Core.Users.EmployeeType},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of users with full information about them matching the parameters specified in the request.
            </summary>
            <short>
            Search users and their information by extended filter
            </short>
            <category>Search</category>
            <param type="System.Nullable{ASC.Core.Users.EmployeeStatus}, System" method="url" optional="true" name="employeeStatus">User status ("Active", "Terminated", "LeaveOfAbsence", "All", or "Default")</param>
            <param type="System.Nullable{System.Guid}, System" method="url" optional="true" name="groupId">Group ID</param>
            <param type="System.Nullable{ASC.Core.Users.EmployeeActivationStatus}, System" method="url" optional="true" name="activationStatus">Activation status ("NotActivated", "Activated", "Pending", or "AutoGenerated")</param>
            <param type="System.Nullable{ASC.Core.Users.EmployeeType}, System" method="url" optional="true" name="employeeType">User type ("All", "User", or "Visitor")</param>
            <param type="System.Nullable{System.Boolean}, System" method="url" optional="true" name="isAdministrator">Specifies if the user is an administrator or not</param>
            <returns type="ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee">
             List of users with their information
            </returns>
            <path>api/2.0/people/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetSimpleByFilter(System.Nullable{ASC.Core.Users.EmployeeStatus},System.Nullable{System.Guid},System.Nullable{ASC.Core.Users.EmployeeActivationStatus},System.Nullable{ASC.Core.Users.EmployeeType},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of users matching the parameters specified in the request.
            </summary>
            <short>
            Search users by extended filter
            </short>
            <category>Search</category>
            <param type="System.Nullable{ASC.Core.Users.EmployeeStatus}, System" method="url" optional="true" name="employeeStatus">User status ("Active", "Terminated", "LeaveOfAbsence", "All", or "Default")</param>
            <param type="System.Nullable{System.Guid}, System" method="url" optional="true" name="groupId">Group ID</param>
            <param type="System.Nullable{ASC.Core.Users.EmployeeActivationStatus}, System" method="url" optional="true" name="activationStatus">Activation status ("NotActivated", "Activated", "Pending", or "AutoGenerated")</param>
            <param type="System.Nullable{ASC.Core.Users.EmployeeType}, System" method="url" optional="true" name="employeeType">User type ("All", "User", or "Visitor")</param>
            <param type="System.Nullable{System.Boolean}, System" method="url" optional="true" name="isAdministrator">Specifies if the user is an administrator or not</param>
            <returns type="ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee">
             List of users
            </returns>
            <path>api/2.0/people/simple/filter</path>
            <httpMethod>GET</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.AddMember(System.Boolean,System.String,System.String,System.String,System.Guid[],System.String,System.String,System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact},System.String,System.String,System.String,System.Nullable{System.Guid})">
            <summary>
            Adds a new portal user with the first name, last name, email address, and several optional parameters specified in the request.
            </summary>
            <short>
            Add a user
            </short>
            <category>Profiles</category>
            <param type="System.Boolean, System" name="isVisitor">Specifies if this is a guest (true) or user (false)</param>
            <param type="System.String, System" name="email">User email</param>
            <param type="System.String, System" name="firstname">User first name</param>
            <param type="System.String, System" name="lastname">User last name</param>
            <param type="System.Guid[], System" name="department" optional="true">User department</param>
            <param type="System.String, System" name="title" optional="true">User title</param>
            <param type="System.String, System" name="location" optional="true">User location</param>
            <param type="System.String, System" name="sex" optional="true">User sex (male or female)</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="birthday" optional="true">User birthday</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="worksfrom" optional="true">User registration date. If it is not specified, then the current date will be set</param>
            <param type="System.String, System" name="comment" optional="true">User comment</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact}, System.Collections.Generic" name="contacts">Contact list</param>
            <param type="System.String, System" name="files">Avatar photo URL</param>
            <param type="System.String, System" name="password" optional="true">User password</param>
            <param type="System.String, System" name="passwordHash" visible="false">Password hash</param>
            <param type="System.Nullable{System.Guid}, System" name="lead">User lead</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Newly added user</returns>
            <path>api/2.0/people</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateMember(System.Boolean,System.String,System.String,System.String,System.String,System.Guid[],System.String,System.String,System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact},System.String,System.Nullable{System.Boolean},System.Nullable{System.Guid})">
            <summary>
            Updates the data for the selected portal user with the first name, last name, email address, and/or optional parameters specified in the request.
            </summary>
            <short>
            Update a user
            </short>
            <category>Profiles</category>
            <param type="System.Boolean, System" name="isVisitor">Specifies if this is a guest (true) or user (false)</param>
            <param type="System.String, System" name="userid">User ID</param>
            <param type="System.String, System" name="firstname">New user first name</param>
            <param type="System.String, System" name="lastname">New user last name</param>
            <param type="System.String, System" name="comment" optional="true">New user comment</param>
            <param type="System.Guid[], System" name="department" optional="true">New user department</param>
            <param type="System.String, System" name="title" optional="true">New user title</param>
            <param type="System.String, System" name="location" optional="true">New user location</param>
            <param type="System.String, System" name="sex" optional="true">New user sex (male or female)</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="birthday" optional="true">New user birthday</param>
            <param type="ASC.Specific.ApiDateTime, ASC.Specific" name="worksfrom" optional="true">New user registration date. If it is not specified, then the current date will be set</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact}, System.Collections.Generic" name="contacts">New contact list</param>
            <param type="System.String, System" name="files">New avatar photo URL</param>
            <param type="System.Nullable{System.Boolean}, System" name="disable">Specifies whether to disable a user on the portal or not</param>
            <param type="System.Nullable{System.Guid}, System" name="lead">User lead</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Updated user</returns>
            <path>api/2.0/people/{userid}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.DeleteMember(System.String)">
            <summary>
            Deletes a user with the ID specified in the request from the portal.
            </summary>
            <short>
            Delete a user
            </short>
            <category>Profiles</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Deleted user</returns>
            <path>api/2.0/people/{userid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateMemberContacts(System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact})">
            <summary>
            Updates the contact information of the user with the ID specified in the request merging the new data into the current portal data.
            </summary>
            <short>
            Update user contacts
            </short>
            <category>Contacts</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact}, System.Collections.Generic" name="contacts">List of new contacts</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Updated user profile</returns>
            <path>api/2.0/people/{userid}/contacts</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SetMemberContacts(System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact})">
            <summary>
            Sets the contacts of the user with the ID specified in the request replacing the current portal data with the new data.
            </summary>
            <short>
            Set user contacts
            </short>
            <category>Contacts</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact}, System.Collections.Generic" name="contacts">List of new contacts</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Updated user profile</returns>
            <path>api/2.0/people/{userid}/contacts</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.DeleteMemberContacts(System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact})">
            <summary>
            Deletes the contacts of the user with the ID specified in the request from the portal.
            </summary>
            <short>
            Delete user contacts
            </short>
            <category>Contacts</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact}, System.Collections.Generic" name="contacts">List of contacts</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">Updated user profile</returns>
            <path>api/2.0/people/{userid}/contacts</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetMemberPhoto(System.String)">
            <summary>
            Returns a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Get a user photo
            </short>
            <category>Photos</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <returns type="ASC.Api.Employee.ThumbnailsDataWrapper, ASC.Api.Employee">User photo</returns>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateMemberPhoto(System.String,System.String)">
            <summary>
            Updates a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Update a user photo
            </short>
            <category>Photos</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="System.String, System" name="files">New avatar photo URL</param>
            <returns type="ASC.Api.Employee.ThumbnailsDataWrapper, ASC.Api.Employee">Updated user photo</returns>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.DeleteMemberPhoto(System.String)">
            <summary>
            Deletes a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Delete a user photo
            </short>
            <category>Photos</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <returns type="ASC.Api.Employee.ThumbnailsDataWrapper,  ASC.Api.Employee">Deleted user photo</returns>
            <path>api/2.0/people/{userid}/photo</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.CreateMemberPhotoThumbnails(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a photo thumbnail by coordinates of the original image specified in the request.
            </summary>
            <short>
            Create a photo thumbnail
            </short>
            <category>Photos</category>
            <param type="System.String, System" method="url" name="userid">User ID</param>
            <param type="System.String, System" name="tmpFile">Path to the temporary file</param>
            <param type="System.Int32, System" name="x">Horizontal coordinate</param>
            <param type="System.Int32, System" name="y">Vertical coordinate</param>
            <param type="System.Int32, System" name="width">Thumbnail width</param>
            <param type="System.Int32, System" name="height">Thumbnail height</param>
            <path>api/2.0/people/{userid}/photo/thumbnails</path>
            <httpMethod>POST</httpMethod>
            <returns type="ASC.Api.Employee.ThumbnailsDataWrapper, ASC.Api.Employee">Thumbnail</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.ChangeUserEmail(System.Guid,System.String)">
            <summary>
            Sets a new email to the user with the ID specified in the request.
            </summary>
            <short>Change a user email</short>
            <category>Email</category>
            <param type="System.Guid, System" name="userid">User ID</param>
            <param type="System.String, System" name="email">New email</param>
            <returns>Detailed user information</returns>
            <path>api/2.0/people/{userid}/email</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SendUserPassword(System.String)">
            <summary>
            Reminds a password to the user using the email address specified in the request.
            </summary>
            <short>
            Remind a user password
            </short>
            <category>Password</category>
            <param type="System.String, System" name="email">User email</param>
            <returns>Email with the password</returns>
            <path>api/2.0/people/password</path>
            <httpMethod>POST</httpMethod>
            <requiresAuthorization>false</requiresAuthorization>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.ChangeUserPassword(System.Guid,System.String)">
            <summary>
            Sets a new password to the user with the ID specified in the request.
            </summary>
            <short>Change a user password</short>
            <category>Password</category>
            <param type="System.Guid, System" name="userid">User ID</param>
            <param type="System.String, System" name="password">New password</param>
            <returns>Detailed user information</returns>
            <path>api/2.0/people/{userid}/password</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateEmployeeActivationStatus(System.Guid,ASC.Core.Users.EmployeeActivationStatus)">
            <summary>
            Sets the required activation status to the user with the ID specified in the request.
            </summary>
            <short>Set an activation status to the user</short>
            <category>Activation status</category>
            <param type="System.Guid, System" name="userid">User ID</param>
            <param type="ASC.Core.Users.EmployeeActivationStatus, ASC.Core.Users" name="activationstatus">Activation status ("NotActivated", "Activated", "Pending", or "AutoGenerated")</param>
            <returns>Detailed user information</returns>
            <path>api/2.0/people/{userid}/activationstatus</path>
            <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateEmployeeActivationStatus(ASC.Core.Users.EmployeeActivationStatus,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets the required activation status to the list of users with the IDs specified in the request.
            </summary>
            <short>
            Set an activation status to the users
            </short>
            <category>Activation status</category>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="userIds">List of user IDs</param>
            <param type="ASC.Core.Users.EmployeeActivationStatus, ASC.Core.Users" name="activationstatus">Activation status ("NotActivated", "Activated", "Pending", or "AutoGenerated")</param>
            <returns>List of users</returns>
            <path>api/2.0/people/activationstatus/{activationstatus}</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateUserType(ASC.Core.Users.EmployeeType,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Changes a type (user or visitor) for the users with the IDs specified in the request.
            </summary>
            <short>
            Change a user type
            </short>
            <category>User type</category>
            <param type="ASC.Core.Users.EmployeeType, ASC.Core.Users" method="url" name="type">New user type ("All", "User", or "Visitor")</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="userIds">List of user IDs</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User list</returns>
            <path>api/2.0/people/type/{type}</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateUserStatus(ASC.Core.Users.EmployeeStatus,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Changes a status for the users with the IDs specified in the request.
            </summary>
            <short>
            Change a user status
            </short>
            <category>User status</category>
            <param type="ASC.Core.Users.EmployeeStatus, ASC.Core.Users" method="url" name="status">New user status ("Active", "Terminated", "LeaveOfAbsence", "All", or "Default"</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="userIds">List of user IDs</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">User list</returns>
            <path>api/2.0/people/status/{status}</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.ResendUserInvites(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Resends emails to the users who have not activated their emails.
            </summary>
            <short>
            Resend an activation email
            </short>
            <category>Profiles</category>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="userIds">List of user IDs</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">List of users</returns>
            <path>api/2.0/people/invite</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.RemoveUsers(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Deletes a list of the users with the IDs specified in the request.
            </summary>
            <short>
            Delete users
            </short>
            <category>Profiles</category>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="userIds">List of user IDs</param>
            <returns type="ASC.Api.Employee.EmployeeWraperFull, ASC.Api.Employee">List of users</returns>
            <path>api/2.0/people/delete</path>
            <httpMethod>PUT</httpMethod>
            <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SendInstructionsToDelete">
            <summary>
            Sends instructions for deleting a user profile.
            </summary>
            <short>
            Send the deletion instructions
            </short>
            <category>Profiles</category>
            <returns>Information message</returns>
            <path>api/2.0/people/self/delete</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.RemindAboutBirthday(System.Guid,System.Boolean)">
            <summary>
            Subscribes to or unsubscribes from the birthday of the user with the ID specified in the request.
            </summary>
            <short>Birthday subscription</short>
            <param type="System.Guid, System" name="userid">User ID</param>
            <param type="System.Boolean, System" name="onRemind">Defines if the user will be notified about another user's birthday or not</param>
            <returns>Bool value: true means that the user will get a notification</returns>
            <category>Birthday</category>
            <path>api/2.0/people/birthdays/reminder</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.LinkAccount(System.String)">
             <summary>
             Links a third-party account specified in the request to the user profile.
             </summary>
             <short>
             Link a third-pary account
             </short>
             <category>Third-party accounts</category>
             <param type="System.String, System" name="serializedProfile">Third-party profile in the serialized format</param>
             <path>api/2.0/people/thirdparty/linkaccount</path>
             <httpMethod>PUT</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UnlinkAccount(System.String)">
             <summary>
             Unlinks a third-party account specified in the request from the user profile.
             </summary>
             <short>
             Unlink a third-pary account
             </short>
             <category>Third-party accounts</category>
             <param type="System.String, System" name="provider">Provider name</param>
             <path>api/2.0/people/thirdparty/unlinkaccount</path>
             <httpMethod>DELETE</httpMethod>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetReassignProgress(System.Guid)">
            <summary>
            Returns the progress of the started data reassignment for the user with the ID specified in the request.
            </summary>
            <short>Get the reassignment progress</short>
            <param type="System.Guid, System" method="url" name="userId">User ID whose data is reassigned</param>
            <category>User data</category>
            <returns type="ASC.Data.Reassigns.ReassignProgressItem, ASC.Data.Reassigns">Reassignment progress</returns>
            <path>api/2.0/people/reassign/progress</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.TerminateReassign(System.Guid)">
            <summary>
            Terminates the data reassignment for the user with the ID specified in the request.
            </summary>
            <short>Terminate the data reassignment</short>
            <param type="System.Guid, System" name="userId">User ID whose data is reassigned</param>
            <category>User data</category>
            <path>api/2.0/people/reassign/terminate</path>
            <httpMethod>PUT</httpMethod>
            <returns></returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.StartReassign(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Starts the data reassignment for the user with the ID specified in the request.
            </summary>
            <short>Start the data reassignment</short>
            <param type="System.Guid, System" name="fromUserId">User ID whose data will be reassigned to another user</param>
            <param type="System.Guid, System" name="toUserId">User ID to whom all the data will be reassigned</param>
            <param type="System.Boolean, System" name="deleteProfile">Specifies whether to delete a profile when the data reassignment will be finished or not</param>
            <category>User data</category>
            <returns type="ASC.Data.Reassigns.ReassignProgressItem, ASC.Data.Reassigns">Reassignment progress</returns>
            <path>api/2.0/people/reassign/start</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetRemoveProgress(System.Guid)">
            <summary>
            Returns the progress of the started data deletion for the user with the ID specified in the request.
            </summary>
            <short>Get the deletion progress</short>
            <param type="System.Guid, System" method="url" name="userId">User ID</param>
            <category>User data</category>
            <returns type="ASC.Data.Reassigns.RemoveProgressItem, ASC.Data.Reassigns">Deletion progress</returns>
            <path>api/2.0/people/remove/progress</path>
            <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.TerminateRemove(System.Guid)">
            <summary>
            Terminates the data deletion for the user with the ID specified in the request.
            </summary>
            <short>Terminate the data deletion</short>
            <param type="System.Guid, System" name="userId">User ID</param>
            <category>User data</category>
            <path>api/2.0/people/remove/terminate</path>
            <httpMethod>PUT</httpMethod>
            <returns></returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.StartRemove(System.Guid)">
            <summary>
            Starts the data deletion for the user with the ID specified in the request.
            </summary>
            <short>Start the data deletion</short>
            <param type="System.Guid, System" name="userId">User ID</param>
            <category>User data</category>
            <returns type="ASC.Data.Reassigns.RemoveProgressItem, ASC.Data.Reassigns">Deletion progress</returns>
            <path>api/2.0/people/remove/start</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="T:ASC.Api.Employee.EmployeeWraperFull">
            <inherited>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</inherited>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.FirstName">
            <example>Mike</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.LastName">
            <example>Zanyatski</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.UserName">
            <example>Mike.Zanyatski</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Email">
            <example>my@domain.com</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Contacts">
            <type>ASC.Api.Employee.Contact, ASC.Api.Employee</type>
            <order>12</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Birthday">
            <example>2008-04-10T06-30-00.000Z</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Sex">
            <example>male</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Status">
            <example type="int">1</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.ActivationStatus">
            <example type="int">0</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Terminated">
            <example>2008-04-10T06-30-00.000Z</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Department">
            <example>Marketing</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.WorkFrom">
            <example>2008-04-10T06-30-00.000Z</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Groups">
            <type>ASC.Api.Employee.GroupWrapperSummary, ASC.Api.Employee</type>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Location">
            <example>Palo Alto</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Notes">
            <example>Notes to worker</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Lead">
            <example>055312F1-1D71-4786-BB5B-D5910316E53C</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.AvatarMedium">
            <example>url to medium avatar</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.Avatar">
            <example>url to big avatar</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsAdmin">
            <example>false</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsLDAP">
            <example>false</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.ListAdminModules">
            <example>projects,crm</example>
            <order>20</order>
            <collection split=",">list</collection>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsOwner">
            <example>false</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsVisitor">
            <example>false</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.CultureName">
            <example>en-EN</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.MobilePhone">
            <example>MobilePhone</example>
            <order>11</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.MobilePhoneActivationStatus">
            <example>1</example>
            <order>11</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraperFull.IsSSO">
            <example>false</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.Id">
            <example>00000000-0000-0000-0000-000000000000</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.DisplayName">
            <example>Mike Zanyatski</example>
            <order>10</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.Title">
            <example>Manager</example>
            <order>11</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.AvatarSmall">
            <example>url to small avatar</example>
            <order>20</order>
        </member>
        <member name="P:ASC.Api.Employee.EmployeeWraper.ProfileUrl">
            <example>\/Products\/People\/Profile.aspx?user=administrator</example>
            <order>30</order>
        </member>
        <member name="T:ASC.Api.Employee.GroupsApi">
            <summary>
             Groups API.
            </summary>
            <name>group</name>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetAll">
            <summary>
            Returns the general information about all the groups, such as group ID and group manager.
            </summary>
            <short>
            Get groups
            </short>
            <returns type="ASC.Api.Employee.GroupWrapperSummary, ASC.Api.Employee">List of groups</returns>
             <remarks>
             This method returns partial group information.
             </remarks>
             <path>api/2.0/group</path>
             <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetTagsByName(System.String)">
            <summary>
            Returns a list of all the groups by the group name specified in the request.
            </summary>
            <short>
            Get groups by a group name
            </short>
            <param type="System.String, System" name="groupName">Group name</param>
            <returns>List of groups</returns>
            <path>api/2.0/group/search</path>
             <httpMethod>GET</httpMethod>
             <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetById(System.Guid)">
            <summary>
            Returns the detailed information about the selected group: group name, category, description, manager, members, and parent group if it exists.
            </summary>
            <short>
            Get a group
            </short>
            <param type="System.Guid, System" method="url" name="groupid">Group ID</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Group</returns>
             <remarks>
             This method returns full group information.
             </remarks>
             <path>api/2.0/group/{groupid}</path>
             <httpMethod>GET</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetByUserId(System.Guid)">
            <summary>
            Returns a list of groups for the user with the ID specified in the request.
            </summary>
            <short>
            Get user groups
            </short>
            <param type="System.Guid, System" method="url" name="userid">User ID</param>
            <returns type="ASC.Api.Employee.GroupWrapperSummary, ASC.Api.Employee">Group</returns>
             <path>api/2.0/group/user/{userid}</path>
             <httpMethod>GET</httpMethod>
              <collection>list</collection>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.AddGroup(System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Adds a new group with the group manager, name, and members specified in the request.
            </summary>
            <short>
            Add a new group
            </short>
            <param type="System.Guid, System" name="groupManager">Group manager</param>
            <param type="System.String, System" name="groupName">Group name</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="members">List of group members</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Newly created group</returns>
            <path>api/2.0/group</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.UpdateGroup(System.Guid,System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Updates the existing group changing the group manager, name, and/or members.
            </summary>
            <short>
            Update a group
            </short>
            <param type="System.Guid, System" method="url" name="groupid">Group ID</param>
            <param type="System.Guid, System" name="groupManager">New group manager</param>
            <param type="System.String, System" name="groupName">New group name</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="members">New list of group members</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Updated group</returns>
            <path>api/2.0/group/{groupid}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.DeleteGroup(System.Guid)">
            <summary>
            Deletes a group with the ID specified in the request from the list of groups on the portal.
            </summary>
            <short>
            Delete a group
            </short>
            <param type="System.Guid, System" method="url" name="groupid">Group ID</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Group</returns>
            <path>api/2.0/group/{groupid}</path>
            <httpMethod>DELETE</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.TransferMembersTo(System.Guid,System.Guid)">
            <summary>
            Moves all the members from the selected group to another one specified in the request.
            </summary>
            <short>
            Move group members
            </short>
            <param type="System.Guid, System" method="url" name="groupid">Group ID to move from</param>
            <param type="System.Guid, System" method="url" name="newgroupid">Group ID to move to</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">New group information</returns>
            <path>api/2.0/group/{groupid}/members/{newgroupid}</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.SetMembersTo(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Replaces the group members with those specified in the request.
            </summary>
            <short>
            Replace group members
            </short>
            <param type="System.Guid, System" method="url" name="groupid">Group ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="members">List of new members</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Group information</returns>
            <path>api/2.0/group/{groupid}/members</path>
            <httpMethod>POST</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.AddMembersTo(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Adds new group members to the group with the ID specified in the request.
            </summary>
            <short>
            Add group members
            </short>
            <param type="System.Guid, System" method="url" name="groupid">Group ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="members">List of new members</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Group information</returns>
            <path>api/2.0/group/{groupid}/members</path>
            <httpMethod>PUT</httpMethod>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.SetManager(System.Guid,System.Guid)">
            <summary>
            Sets a user with the ID specified in the request as a group manager.
            </summary>
            <short>
            Set a group manager
            </short>
            <param type="System.Guid, System" method="url" name="groupid">Group ID</param>
            <param type="System.Guid, System" name="userid">User ID</param>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Group information</returns>
            <path>api/2.0/group/{groupid}/manager</path>
            <httpMethod>PUT</httpMethod>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.RemoveMembersFrom(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Removes the group members specified in the request from the selected group.
            </summary>
            <short>
            Remove group members
            </short>
            <param type="System.Guid, System" method="url" name="groupid">Group ID</param>
            <param type="System.Collections.Generic.IEnumerable{System.Guid}, System.Collections.Generic" name="members">List of group members</param>
            <path>api/2.0/group/{groupid}/members</path>
            <httpMethod>DELETE</httpMethod>
            <returns type="ASC.Api.Employee.GroupWrapperFull, ASC.Api.Employee">Group information</returns>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Description">
            <example>Description</example>
            <order>5</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Name">
            <example>Sample group</example>
            <order>2</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Parent">
            <example>852d4b63-997a-4bae-aa7b-89bb87d85dbf</example>
            <order>4</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Category">
            <example>74f31a85-991b-4e9b-b9e8-ae8e80d468f5</example>
            <order>3</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Id">
            <example>fadd9f49-2431-4610-a518-3ca9b3843c88</example>
            <order>1</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Manager">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
            <order>9</order>
        </member>
        <member name="P:ASC.Api.Employee.GroupWrapperFull.Members">
            <type>ASC.Api.Employee.EmployeeWraper, ASC.Api.Employee</type>
            <order>10</order>
            <collection>list</collection>
        </member>
    </members>
</doc>
